{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/calendar.component.html","webpack:///./src/app/calendar.component.ts","webpack:///./src/app/changePassword.component.html","webpack:///./src/app/changePassword.component.ts","webpack:///./src/app/createCategory.component.ts","webpack:///./src/app/createcategory.component.html","webpack:///./src/app/createtask.component.html","webpack:///./src/app/createtask.component.ts","webpack:///./src/app/createtitle.component.html","webpack:///./src/app/createtitle.component.ts","webpack:///./src/app/customFilter.js","webpack:///./src/app/dashboard.component.html","webpack:///./src/app/dashboard.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/global.ts","webpack:///./src/app/navigation.component.html","webpack:///./src/app/navigation.component.ts","webpack:///./src/app/register.component.html","webpack:///./src/app/register.component.ts","webpack:///./src/app/register.service.ts","webpack:///./src/app/roles.component.html","webpack:///./src/app/roles.component.ts","webpack:///./src/app/sidebar.component.html","webpack:///./src/app/sidebar.component.ts","webpack:///./src/app/task.component.html","webpack:///./src/app/task.component.ts","webpack:///./src/app/tasklist.component.html","webpack:///./src/app/tasklist.component.ts","webpack:///./src/app/title.component.html","webpack:///./src/app/title.component.ts","webpack:///./src/app/titleCategory.component.html","webpack:///./src/app/titleCategory.component.ts","webpack:///./src/app/users.component.html","webpack:///./src/app/users.component.ts","webpack:///./src/app/usersactivity.component.html","webpack:///./src/app/usersactivity.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///xhr2 (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div id=\\\"wrapper\\\">\\n    <side-bar *ngIf=\\\"router.url!='/register'&&router.url!='/login'&&router.url!='/forgetpassword'\\\"></side-bar>\\n        <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\"> \\n            <div id=\\\"content\\\">\\n                <nav-bar *ngIf=\\\"router.url!='/register'&&router.url!='/login'&&router.url!='/forgetpassword'\\\"></nav-bar>\\n                <router-outlet></router-outlet>\\n            </div>\\n        </div>\\n    </div>\\n    <a class=\\\"scroll-to-top rounded\\\" href=\\\"#page-top\\\"><i class=\\\"fas fa-angle-up\\\"></i></a>\\n\"","import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class AppComponent {\n  isAuthenticated: boolean;\n  constructor(private router: Router,public oktaAuth: OktaAuthService){\n    this.oktaAuth.$authenticationState.subscribe(\n      (isAuthenticated: boolean) => (this.isAuthenticated = isAuthenticated)\n  );\n  }\n  async ngOnInit() {\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\n  } \n\n  login() {\n      this.oktaAuth.loginRedirect('/');\n  }\n\n  logout() {\n      this.oktaAuth.logout('/');\n  }\n}\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { sideBarComponent } from './sidebar.component';\nimport { navBarComponent } from './navigation.component';\nimport { registerComponent } from './register.component';\nimport { rolesComponent } from './roles.component';\nimport { usersComponent } from './users.component';\nimport { usersActivityComponent } from './usersactivity.component';\nimport { dashboardComponent } from './dashboard.component';\nimport { createtaskComponent } from './createtask.component';\nimport { taskComponent } from './task.component';\nimport { changePasswordComponent } from './changePassword.component';\nimport { calendarComponent } from './calendar.component';\nimport { titleComponent } from './title.component';\nimport { taskListComponent } from './tasklist.component';\nimport { titleCategoryComponent } from './titleCategory.component';\nimport { createCategoryComponent } from './createCategory.component';\nimport { createTitleComponent } from './createtitle.component';\nimport { Globals } from './global';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OktaAuthModule, OktaCallbackComponent } from '@okta/okta-angular';\nimport { Role,registerService } from './register.service';\nimport { MyFilterPipe, TitleFilterPipe,CategoryFilterPipe } from './customFilter.js';\nimport { DateFilterPipe } from './customFilter.js';\nimport { AngularDateTimePickerModule } from 'angular2-datetimepicker';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { ClickOutsideModule } from 'ng-click-outside';\nimport { FlatpickrModule } from 'angularx-flatpickr';\n\n// import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\nimport {DayPilotModule} from 'daypilot-pro-angular';\nimport { DataService } from './data.service';\n\n\nconst oktaConfig = {\n  issuer: 'https://dev-541473.okta.com',\n  redirectUri: 'http://localhost:4200/implicit/callback',\n  clientId: '{yourClientId}'\n};\n\nconst appRoutes: Routes = [ \n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'register', component: registerComponent },\n  { path: 'login', component: registerComponent },\n  { path: 'forgetpassword', component: registerComponent },\n  { path: 'changePassword', component: changePasswordComponent },\n  { path: 'roles', component: rolesComponent },\n  { path: 'users', component: usersComponent },\n  { path: 'activity', component: usersActivityComponent },\n  { path: 'dashboard', component: taskComponent },\n  { path: 'summary', component: taskComponent },\n  { path: 'report', component: taskComponent },\n  { path: 'createtask', component: createtaskComponent },\n  { path: 'calendar', component: calendarComponent },\n  { path: 'title', component: titleComponent },\n  { path: 'category', component: titleCategoryComponent },\n  { path: 'tasklist', component: taskListComponent },\n  { path: 'tasks', component: taskComponent,children :[\n    {\n      path : \":id\",component:taskComponent\n    }\n  ] },\n  { path: 'implicit/callback', component: OktaCallbackComponent },\n  // { path: '**', redirectTo: '', pathMatch: 'full' },\n  ];\n\n@NgModule({\n  declarations: [ \n    AppComponent,\n    sideBarComponent,\n    navBarComponent,\n    registerComponent,\n    rolesComponent,\n    usersComponent,\n    dashboardComponent,\n    createtaskComponent,\n    taskComponent,\n    changePasswordComponent,\n    usersActivityComponent,\n    titleComponent,\n    calendarComponent,\n    titleCategoryComponent,\n    taskListComponent,\n    createCategoryComponent,\n    createTitleComponent,\n    MyFilterPipe,\n    DateFilterPipe,\n    TitleFilterPipe,\n    CategoryFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    OktaAuthModule.initAuth(oktaConfig),\n    AngularDateTimePickerModule,\n    BsDatepickerModule.forRoot(),\n    ClickOutsideModule,\n    BrowserAnimationsModule,\n    DayPilotModule,\n    FlatpickrModule.forRoot(),\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    })\n  ],\n  providers: [Globals,DataService],\n  bootstrap: [AppComponent],\n  exports: [calendarComponent]\n})\nexport class AppModule { }\n","module.exports = \"<style>\\r\\n  select, textarea, input{\\r\\n      font-size: 1rem !important;\\r\\n      color: #6e707e !important;\\r\\n  }\\r\\n  .cancelButton{\\r\\n      margin-left: 6%;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row text-center calendarTop\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        mwlCalendarPreviousView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\"\\r\\n      >\\r\\n        Previous\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-outline-secondary\\\"\\r\\n        mwlCalendarToday\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n      >\\r\\n        Today\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        mwlCalendarNextView\\r\\n        [view]=\\\"view\\\"\\r\\n        [(viewDate)]=\\\"viewDate\\\"\\r\\n        (viewDateChange)=\\\"closeOpenMonthViewDay()\\\"\\r\\n      >\\r\\n        Next\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"setView(CalendarView.Month)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Month\\\"\\r\\n      >\\r\\n        Month\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"setView(CalendarView.Week)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Week\\\"\\r\\n      >\\r\\n        Week\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"setView(CalendarView.Day)\\\"\\r\\n        [class.active]=\\\"view === CalendarView.Day\\\"\\r\\n      >\\r\\n        Day\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br />\\r\\n<div [ngSwitch]=\\\"view\\\" >\\r\\n  <mwl-calendar-month-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Month\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\r\\n    (dayClicked)=\\\"dayClicked($event.day)\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n  >\\r\\n  </mwl-calendar-month-view>\\r\\n  <mwl-calendar-week-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Week\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n  >\\r\\n  </mwl-calendar-week-view>\\r\\n  <mwl-calendar-day-view\\r\\n    *ngSwitchCase=\\\"CalendarView.Day\\\"\\r\\n    [viewDate]=\\\"viewDate\\\"\\r\\n    [events]=\\\"events\\\"\\r\\n    [refresh]=\\\"refresh\\\"\\r\\n    (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\r\\n    (eventTimesChanged)=\\\"eventTimesChanged($event)\\\"\\r\\n  >\\r\\n  </mwl-calendar-day-view>\\r\\n</div>\\r\\n\\r\\n<!-- Everything you see below is just for the demo, you don't need to include it in your app -->\\r\\n\\r\\n<br /><br /><br />\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #modalContent let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      Action:\\r\\n      <pre>{{ modalData?.action }}</pre>\\r\\n    </div>\\r\\n    <div>\\r\\n      Event:\\r\\n      <pre>{{ modalData?.event | json }}</pre>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">\\r\\n      OK\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"editTask\\\" >\\r\\n  <div class=\\\"overlay-bg\\\"></div>\\r\\n  <div class=\\\"createPopup\\\">\\r\\n  <div class=\\\"container-fluid create-task\\\">\\r\\n                      <div class=\\\"card shadow mb-4 list\\\">\\r\\n                          <div class=\\\"card-header py-3\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-md-8\\\">\\r\\n                                      <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Edit task</h6>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"card-body input-border\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-md-12 col-lg-12\\\">     \\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                      <div class=\\\"row row-mat-top\\\">\\r\\n                                          <div class=\\\"col-md-12\\\">\\r\\n                                          <!-- <input type=\\\"text\\\" (ngModel)=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the title here...\\\" [value]=\\\"etitle\\\" [readonly]=\\\"role!='admin'\\\"> -->\\r\\n                                          <select (ngModel)=\\\"mcat\\\" (input)=\\\"mcat=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" *ngIf=\\\"categories\\\" [value]=\\\"mcat\\\" [disabled]=\\\"role!='admin'\\\">\\r\\n                                            <option value=\\\"\\\">Please choose category</option>\\r\\n                                            <option *ngFor=\\\"let cat of categories\\\" value=\\\"{{cat.id}}\\\">{{cat.name}}</option>\\r\\n                                        </select>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row row-mat-top\\\">\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <select [(ngModel)]=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" [disabled]=\\\"role!='admin'\\\">\\r\\n                                                <option value=\\\"\\\">Please choose title</option>\\r\\n                                                <option *ngFor=\\\"let title of titles|catFilter:mcat\\\" value=\\\"{{title.name}}\\\">{{title.name}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                      <div class=\\\"row row-mat-top\\\">\\r\\n                                          <div class=\\\"col-md-12\\\">\\r\\n                                          <textarea (ngModel)=\\\"edescription\\\" (input)=\\\"edescription=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Write details about the task...\\\" [value]=\\\"edescription\\\" [readonly]=\\\"role!='admin'\\\"></textarea>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"row row-mat-top\\\">\\r\\n                                              <div class=\\\"col-md-4\\\">\\r\\n                                                  <label class=\\\"form-label\\\">Assign to</label>\\r\\n                                              </div>\\r\\n                                              <div class=\\\"col-md-8\\\">\\r\\n                                                  <select [(ngModel)]=\\\"eassignee\\\" (input)=\\\"eassignee=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to\\\" *ngIf=\\\"assignee\\\" [disabled]=\\\"role!='admin'\\\">\\r\\n                                                      <option *ngFor=\\\"let assig of assignee\\\" value=\\\"{{assig.id}}\\\" >{{assig.name}}</option>\\r\\n                                                  </select>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"row row-mat-top\\\">\\r\\n                                              <div class=\\\"col-md-4\\\">\\r\\n                                                  <label class=\\\"form-label\\\">Priority</label>\\r\\n                                              </div>\\r\\n                                              <div class=\\\"col-md-8\\\">\\r\\n                                                  <select [(ngModel)]=\\\"epriority\\\" (input)=\\\"epriority=$event.target.value\\\"   class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Priority\\\" *ngIf=\\\"priority\\\"  [disabled]=\\\"role!='admin'\\\">\\r\\n                                                      <option *ngFor=\\\"let pri of priority\\\" value=\\\"{{pri.id}}\\\">{{pri.name}}</option>\\r\\n                                                  </select>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"row row-mat-top\\\">\\r\\n                                              <div class=\\\"col-md-4\\\">\\r\\n                                                  <label class=\\\"form-label\\\">Due date</label>\\r\\n                                              </div>\\r\\n                                              <div class=\\\"col-md-8\\\">\\r\\n                                                  <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"eduedate\\\" #datePicker4 (input)=\\\"eduedate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"eduedate = datePicker4.value\\\" [value]=\\\"eduedate| date:'yyyy-MM-dd'\\\" readonly>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"row row-mat-top\\\">\\r\\n                                              <div class=\\\"col-md-4\\\">\\r\\n                                                  <label class=\\\"form-label\\\">Expected date</label>\\r\\n                                              </div>\\r\\n                                              <div class=\\\"col-md-8\\\">\\r\\n                                                  <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"eexpecteddate\\\" #datePicker5 (input)=\\\"eexpecteddate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"eexpecteddate = datePicker5.value\\\" [value]=\\\"eexpecteddate| date:'yyyy-MM-dd'\\\" readonly>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                                          <div class=\\\"form-group\\\">\\r\\n                                              <div class=\\\"row row-mat-top\\\">\\r\\n                                                  <div class=\\\"col-md-4\\\">\\r\\n                                                      <label class=\\\"form-label\\\">Type(Recurring)</label>\\r\\n                                                  </div>\\r\\n                                                  <div class=\\\"col-md-8\\\">\\r\\n                                                      <select [(ngModel)]=\\\"etype\\\" (input)=\\\"etype=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Type\\\" *ngIf=\\\"type\\\"  [disabled]=\\\"role!='admin'\\\">\\r\\n                                                          <option *ngFor=\\\"let ty of type\\\" value=\\\"{{ty.id}}\\\">{{ty.name}}</option>\\r\\n                                                      </select>\\r\\n                                                  </div>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"form-group\\\">\\r\\n                                              <div class=\\\"row row-mat-top\\\">\\r\\n                                                  <div class=\\\"col-md-4\\\">\\r\\n                                                      <label class=\\\"form-label\\\">Status</label>\\r\\n                                                  </div>\\r\\n                                                  <div class=\\\"col-md-8\\\">\\r\\n                                                      <select [(ngModel)]=\\\"estatus\\\" (input)=\\\"estatus=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Status\\\" *ngIf=\\\"status\\\">\\r\\n                                                          <option *ngFor=\\\"let st of status\\\" value=\\\"{{st.id}}\\\" >{{st.name}}</option>\\r\\n                                                      </select>\\r\\n                                                  </div>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"form-group\\\">\\r\\n                                              <div class=\\\"row row-mat-top\\\">\\r\\n                                                  <div class=\\\"col-md-4\\\">\\r\\n                                                      <label class=\\\"form-label\\\">Reminder date</label>\\r\\n                                                  </div>\\r\\n                                                  <div class=\\\"col-md-8\\\">\\r\\n                                                      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"ereminderdate\\\" #datePicker6 (input)=\\\"ereminderdate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"ereminderdate = datePicker6.value\\\" [value]=\\\"ereminderdate| date:'yyyy-MM-dd'\\\" readonly>\\r\\n                                                  </div>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                  <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                                      <div class=\\\"text-left\\\">\\r\\n                                      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">SAVE &amp;  CLOSE</button>\\r\\n                                      <button type=\\\"submit\\\" class=\\\"btn btn-danger cancelButton\\\"  (click)=\\\"cancel()\\\">CANCEL</button>\\r\\n                                      </div>                                  \\r\\n                                  </div> \\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>   \\r\\n                  </div>\\r\\n                  </div>\\r\\n                  \\r\\n<div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import {  Component,  ChangeDetectionStrategy,  ViewChild,  TemplateRef, OnInit} from '@angular/core';\nimport {  startOfDay,  endOfDay,  subDays,  addDays,  endOfMonth,  isSameDay,  isSameMonth,  addHours} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {  CalendarEvent,  CalendarEventAction,  CalendarEventTimesChangedEvent,  CalendarView } from 'angular-calendar';\nimport { RouterModule, Router, ActivatedRoute  } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\nimport * as moment from 'moment';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // styleUrls: ['styles.css'],\n  templateUrl: './calendar.component.html',\n  providers: [ Globals ] \n})\nexport class calendarComponent {\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n  private userId;\n  private tasks;\n  private formdata;\n  private headers;accessToken;alertMessage;events;editTask;\n  private etitle;edescription;eassignee;epriority;eduedate;eexpecteddate;etype;estatus;ereminderdate;currentTaskId;currentTask;\n  private options;priority;status;type;assignee;role;errorMessage;currentUser;titles;categories;mcat;\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  activeDayIsOpen: boolean = false;\n\n  constructor(private modal: NgbModal,private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals, private route : ActivatedRoute) {\n    this.init();\n    this.getOptions();\n    this.editTask = false;\n    this.checkUser();\n    this.getTitles();\n  }\n\n  async init() {    \n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n    this.getTasks();\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map(iEvent => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    // this.modalData = { event, action };\n    // this.modal.open(this.modalContent, { size: 'lg' });\n    \n\n    \n    if(action == 'Clicked'){\n      this.currentTask = event;\n      this.etitle = event['title'];    \n      this.edescription = event['description'];   \n      this.eassignee = event['user_id'] ;\n      this.epriority = event['priority_id'];\n      event['due_date'] = moment(new Date(event['due_date'])).format(\"MM/DD/YYYY\");\n      this.eduedate = event['due_date'];\n      event['expected_date'] = moment(new Date(event['expected_date'])).format(\"MM/DD/YYYY\");\n      this.eexpecteddate = event['expected_date'];\n      this.etype = event['type_id'];\n      this.estatus = event['status_id'];\n      event['reminder_date'] = moment(new Date(event['reminder_date'])).format(\"MM/DD/YYYY\");\n      this.ereminderdate = event['reminder_date'];\n      this.currentTaskId = event['id'];\n      if(event['titles'])\n        this.mcat = event['titles']['category_id'];\n      this.editTask = true;\n    }\n    if(action == 'Deleted'){\n      this.formdata = {\n        id : event.id\n      }\n      this.http.post(this.globals.baseUrl+'deletetask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Task has been deleted...\");\n            this.router.navigate(['/calendar'])\n            setTimeout(function(){\n              window.location.reload();\n            })\n          },\n          error => this.errorMessage = <any>error\n      );\n    }\n    \n  }\n\n  getOptions() {\n    this.http.get(this.globals.baseUrl+'getOptions')\n      .subscribe(\n          response => {\n            this.options = response;\n            this.priority = this.options.priority;\n            this.status = this.options.status;\n            this.type = this.options.type;\n            this.assignee = this.options.users            \n          },\n          error => {this.toast(\"Request Failed...\");}\n      );\n  }\n\n  checkUser(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'userrole',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n            this.role = this.currentUser.role;\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n  cancel(){\n    this.editTask = false;\n  }\n\n  addEvent(): void {\n    this.events = [\n      ...this.events,\n      {\n        title: 'New event',\n        start: startOfDay(new Date()),\n        end: endOfDay(new Date()),\n        color: colors.red,\n        draggable: true,\n        resizable: {\n          beforeStart: true,\n          afterEnd: true\n        }\n      }\n    ];\n  }\n\n  save(){\n    if(!this.edescription){\n      this.edescription = null;\n    }\n    if(!this.etype){\n      this.etype = null;\n    }\n    if(!this.ereminderdate){\n      this.ereminderdate = null;\n    }\n    if(!this.eexpecteddate){\n      this.eexpecteddate = null;\n    }\n    if(!this.etitle){\n      this.toast(\"Please enter title\");\n    }\n    else if(!this.eassignee){\n      this.toast(\"Please choose assignee\");\n    }\n    else if(!this.epriority){\n      this.toast(\"Please choose priority\");\n    }\n    else if(!this.estatus){\n      this.toast(\"Please choose status\");\n    }\n    else if(!this.eduedate){\n      this.toast(\"Please enter due date\");\n    }\n    \n    else{\n      var eduedate = moment(new Date(this.eduedate)).format(\"YYYY-MM-DD\");\n      var ereminderdate = moment(new Date(this.ereminderdate)).format(\"YYYY-MM-DD\");\n      var eexpecteddate = moment(new Date(this.eexpecteddate)).format(\"YYYY-MM-DD\");\n      this.formdata = {\n        title : this.etitle,\n        description : this.edescription,\n        user_id : this.eassignee,\n        type_id : this.etype,\n        priority_id : this.epriority,\n        status_id : this.estatus,\n        due_date : eduedate,\n        reminder_date : ereminderdate,\n        expected_date : eexpecteddate,\n        id : this.currentTaskId\n      }\n      this.http.post(this.globals.baseUrl+'updatetask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Task has been Updated...\");\n            this.router.navigate(['/calendar'])\n            setTimeout(function(){\n              window.location.reload();\n            })\n          },\n          error => this.errorMessage = <any>error\n      );\n    }    \n  }\n\n  deleteEvent(eventToDelete: CalendarEvent) {\n    this.events = this.events.filter(event => event !== eventToDelete);\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }  \n\n  getTitles(){\n    this.http.get(this.globals.baseUrl+'categoriesTitle')\n    .subscribe( \n      response => {\n        this.categories = response\n      },\n      error => {}\n    );\n    this.http.get(this.globals.baseUrl+'titles')\n    .subscribe( (data) => {\n      this.titles = data\n     });\n  }\n  \n  getTasks(){\n    this.userId = localStorage.getItem('userId');    \n     this.formdata = {\n      id : this.userId\n    }\n     \n     this.http.post(this.globals.baseUrl+'gettask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.events = response\n            for(var i =0; i< this.events.length;i++){\n              this.events[i].start = subDays(startOfDay(new Date(this.events[i].due_date)), 0); \n              this.events[i].color = {};\n              this.events[i].color.primary = this.events[i].statusColor;\n              this.events[i].color.secondary = this.events[i].statusColor;\n              this.events[i].actions = this.actions\n              this.events[i].allDay = true\n              this.events[i].resizable = {\n                beforeStart: false,\n                afterEnd: true\n              }\n            }\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n  }\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n}\n","module.exports = \"<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-4\\\">\\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item active\\\">\\r\\n                <a href=\\\"#\\\"> Change Password</a>\\r\\n             </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n       <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Change Password</h6>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-body input-border\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"password\\\" (ngModel)=\\\"password\\\" (input)=\\\"password=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the password here...\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"password\\\" (ngModel)=\\\"cpassword\\\" (input)=\\\"cpassword=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Confirm the password here...\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"text-left\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"change()\\\">Change password</button>\\r\\n                  </div>\\r\\n                  </div> \\r\\n              </div>\\r\\n        </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './changePassword.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class changePasswordComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private users;\n  private formdata;\n  private alertMessage;\n  private password;\n  private cpassword;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    \n  }\n  ngOnInit() {\n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  change(){\n    if(!this.password){\n      this.toast(\"Please enter password\");\n    }\n    else if(!this.cpassword){\n      this.toast(\"Please confirm your password\");\n    }\n    else if(this.password!=this.cpassword){\n      this.toast(\"Password and confirm password mismatched...\");\n    }\n    else{\n      this.formdata = {\n        id : localStorage.getItem('userId'),\n        password : this.password\n      }\n      this.http.post(this.globals.baseUrl+'updatepassword',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Password Changed Successfully...\");\n            window.location.reload();\n          },\n          error => {this.toast(\"Change password failed...\");}\n      ); \n    }     \n  }\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n}\n\n\n\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { RouterModule, Router } from '@angular/router';\nimport { Globals } from './global';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'createcategory-root',\n  templateUrl: './createcategory.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class createCategoryComponent {\n  errorMessage: string;\n  private accessToken;titles;\n  private headers;\n  private alertMessage;\n  private role;\n  private userId;\n  private formdata;\n  private options;categories;mcat;\n  private title;showCreateTask;notify\n  private mexpecteddate;showTextbox;\n  @Output() closePopup = new EventEmitter(); \n  @Output() saveclose = new EventEmitter(); \n  constructor(private router: Router, private http: HttpClient, private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.showTextbox = false;\n    this.notify = false;\n  }\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  showText(){\n    this.showTextbox = true;\n  }\n\n  hideText(){\n    this.showTextbox = false;\n  }\n\n  cancel(){\n    this.closePopup.emit(false);\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n    var x = document.getElementById(\"snackbar\");\n    x.className = \"show\";\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n  notifychange(param){\n    this.notify = param.target.checked;\n  }\n  save(){\n    if(!this.title){\n      this.toast(\"Please enter title\");\n    }\n    else{\n      this.formdata = {\n        title : this.title\n      }\n      this.http.post(this.globals.baseUrl+'addcategory',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.closePopup.emit(false);\n            this.saveclose.emit();\n          },\n          error => {this.toast(\"Title Category added failed...\");}\n      ); \n    }     \n  }\n}\n\n\n\n","module.exports = \"<style>\\r\\n    select, textarea, input{\\r\\n        font-size: 1rem !important;\\r\\n        color: #6e707e !important;\\r\\n    }\\r\\n    .cancelButton{\\r\\n        margin-left: 6%;\\r\\n    }\\r\\n    .form-control{\\r\\n        background-color: #f3f2f2 !important;\\r\\n        border: 0px solid #d1d3e2!important;\\r\\n    }\\r\\n</style>\\r\\n <div class=\\\"container-fluid create-task\\\">\\r\\n    <div class=\\\"card shadow mb-4 list\\\">\\r\\n       <div class=\\\"card-body input-border\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-12\\\">\\r\\n                    <h2>Create category</h2>\\r\\n                <div class=\\\"row\\\">                    \\r\\n                   <div class=\\\"col-md-8\\\">\\r\\n                      <div class=\\\"breadcrumb\\\">\\r\\n                         <div class=\\\"col-md-12\\\">\\r\\n                            <input type=\\\"text\\\" (ngModel)=\\\"title\\\" (input)=\\\"title=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the category name here...\\\">\\r\\n                         </div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-12 button-my-sty\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success cursorPointer\\\" (click)=\\\"save()\\\">SAVE &amp;  CLOSE</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger cancelButton\\\" (click)=\\\"cancel()\\\">CANCEL</button>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","module.exports = \"<style>\\r\\n    select, textarea, input{\\r\\n        font-size: 1rem !important;\\r\\n        color: #6e707e !important;\\r\\n    }\\r\\n    .cancelButton{\\r\\n        margin-left: 6%;\\r\\n    }\\r\\n    .form-control{\\r\\n        background-color: #f3f2f2 !important;\\r\\n        border: 0px solid #d1d3e2!important;\\r\\n    }\\r\\n</style>\\r\\n <div class=\\\"container-fluid create-task\\\">\\r\\n    <div class=\\\"card shadow mb-4 list\\\">\\r\\n       <div class=\\\"card-body input-border\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-md-8\\\">\\r\\n                      <div class=\\\"breadcrumb\\\">                         \\r\\n                        <div class=\\\"col-md-1\\\">\\r\\n                            <i class=\\\"far fa-plus-square\\\" (click)=\\\"showText()\\\"></i>\\r\\n                        </div>\\r\\n                         <div class=\\\"col-md-11\\\">\\r\\n                            <select (ngModel)=\\\"mcat\\\" (input)=\\\"mcat=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" *ngIf=\\\"categories\\\">\\r\\n                                <option value=\\\"\\\">Please choose category</option>\\r\\n                                <option *ngFor=\\\"let cat of categories\\\" value=\\\"{{cat.id}}\\\">{{cat.name}}</option>\\r\\n                            </select>\\r\\n                         </div>\\r\\n                         \\r\\n                      </div>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-md-4\\\">\\r\\n                      <div class=\\\"out\\\">\\r\\n                         <div class=\\\"check-box\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"chek11\\\" [(ngModel)]=\\\"notify\\\" (change)=\\\"notifychange($event)\\\" >\\r\\n                            <label for=\\\"chek11\\\"><span>Notify</span></label>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"mcat&&titles\\\">\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                       <div class=\\\"breadcrumb\\\">   \\r\\n                        <div class=\\\"col-md-1\\\">\\r\\n                            <i class=\\\"far fa-plus-square\\\" (click)=\\\"showTitle()\\\"></i>\\r\\n                        </div>                       \\r\\n                          <div class=\\\"col-md-11\\\">\\r\\n                             <select (ngModel)=\\\"mtitle\\\" (input)=\\\"mtitle=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" >\\r\\n                                 <option value=\\\"\\\">Please choose title</option>\\r\\n                                 <option *ngFor=\\\"let title of titles|catFilter:mcat\\\" value=\\\"{{title.name}}\\\">{{title.name}}</option>\\r\\n                             </select>\\r\\n                          </div>\\r\\n                          \\r\\n                       </div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                         <textarea id=\\\"message\\\" name=\\\"phone\\\" class=\\\"form-control textarea-sty-css\\\" placeholder=\\\"Write details about the task...\\\" (ngModel)=\\\"mdescription\\\" (input)=\\\"mdescription=$event.target.value\\\"></textarea>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Assign to</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <select (ngModel)=\\\"massignee\\\" (input)=\\\"massignee=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" *ngIf=\\\"assignee\\\">\\r\\n                         <option value=\\\"\\\">Please choose assignee</option>\\r\\n                         <option *ngFor=\\\"let assigne of assignee\\\" value=\\\"{{assigne.id}}\\\">{{assigne.name}}</option>\\r\\n                         </select>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Priority</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <select (ngModel)=\\\"mpriority\\\" (input)=\\\"mpriority=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Priority\\\" *ngIf=\\\"priority\\\">\\r\\n                         <option value=\\\"\\\">Please choose priority</option>\\r\\n                         <option *ngFor=\\\"let pri of priority\\\" value=\\\"{{pri.id}}\\\">{{pri.name}}</option>\\r\\n                         </select>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Due date</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"mduedate\\\" #datePicker (input)=\\\"mduedate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"mduedate = datePicker.value\\\" readonly>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Expected date</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"mexpecteddate\\\" #datePicker2 (input)=\\\"mexpecteddate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"mexpecteddate = datePicker2.value\\\" readonly>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Type(Recurring)</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <select (ngModel)=\\\"mtype\\\" (input)=\\\"mtype=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Type\\\" *ngIf=\\\"type\\\">\\r\\n                         <option value=\\\"\\\">Please choose type</option>\\r\\n                         <option *ngFor=\\\"let ty of type\\\" value=\\\"{{ty.id}}\\\">{{ty.name}}</option>\\r\\n                         </select>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Status</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <select (ngModel)=\\\"mstatus\\\" (input)=\\\"mstatus=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Status\\\" *ngIf=\\\"status\\\">\\r\\n                         <option value=\\\"\\\">Please choose status</option>\\r\\n                         <option *ngFor=\\\"let st of status\\\" value=\\\"{{st.id}}\\\">{{st.name}}</option>\\r\\n                         </select>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                   <div class=\\\"row row-mat-top\\\">\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                         <label class=\\\"form-label\\\">Reminder date</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-8\\\">\\r\\n                         <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"mreminderdate\\\" #datePicker3 (input)=\\\"mreminderdate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"mreminderdate = datePicker3.value\\\" readonly>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-12 button-my-sty\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success cursorPointer\\\" (click)=\\\"save()\\\">SAVE &amp;  CLOSE</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger cancelButton\\\" (click)=\\\"cancel()\\\">CANCEL</button>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\\r\\n\\r\\n <div *ngIf=\\\"showTextbox\\\">\\r\\n    <div class=\\\"overlay-bg\\\"></div>\\r\\n    <div class=\\\"createPopup\\\">\\r\\n        <createcategory-root (saveclose)=\\\"getTitles()\\\" (closePopup)='setshowCreateTask($event)' ></createcategory-root>\\r\\n    </div>\\r\\n </div>\\r\\n\\r\\n\\r\\n <div *ngIf=\\\"showTitlebox\\\">\\r\\n<div class=\\\"overlay-bg\\\"></div>\\r\\n<div class=\\\"createPopup\\\">\\r\\n    <createtitle-root (saveclose)=\\\"getTitles()\\\" (closePopup)='setshowCreateTitle($event)' ></createtitle-root>\\r\\n</div>\\r\\n</div>\"","import { Component, Output, EventEmitter } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { RouterModule, Router } from '@angular/router';\nimport { Globals } from './global';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'createtask-root',\n  templateUrl: './createtask.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class createtaskComponent {\n  errorMessage: string;\n  private accessToken;titles;\n  private headers;\n  private alertMessage;\n  private role;\n  private userId;\n  private formdata;\n  private options;categories;mcat;\n  private priority;\n  private status;\n  private type;\n  private assignee;\n  private mtitle;showCreateTask;\n  private mdescription;\n  private massignee;\n  private mpriority;\n  private mtype;\n  private mstatus;\n  private mduedate;\n  private mreminderdate;notify\n  private mexpecteddate;showTextbox;showTitlebox;\n  @Output() closePopup = new EventEmitter(); \n  constructor(private router: Router, private http: HttpClient, private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.getOptions();\n    this.getTitles();\n    this.showTextbox = false;\n    this.notify = false;\n    this.showTitlebox = false;\n  }\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  showText(){\n    this.showTextbox = true;\n  }\n\n  showTitle(){\n    this.showTitlebox = true;\n  }\n\n  hideText(){\n    this.showTextbox = false;\n  }\n\n  cancel(){\n    this.closePopup.emit(false);\n  }\n\n  setshowCreateTask(e){\n    if(e){\n      this.showTextbox = e;\n    } else {\n      this.showTextbox = !this.showTextbox;\n    }\n  }\n\n  setshowCreateTitle(e){\n    if(e){\n      this.showTitlebox = e;\n    } else {\n      this.showTitlebox = !this.showTitlebox;\n    }\n  }\n  getOptions() {\n    this.http.get(this.globals.baseUrl+'getOptions')\n      .subscribe(\n          response => {\n            this.options = response;\n            this.priority = this.options.priority;\n            this.status = this.options.status;\n            this.type = this.options.type;\n            this.assignee = this.options.users\n          },\n          error => {this.toast(\"Request Failed...\");}\n      );\n  }\n\n  getTitles(){\n    this.http.get(this.globals.baseUrl+'categoriesTitle')\n    .subscribe( \n      response => {\n        this.categories = response\n      },\n      error => {}\n    );\n    this.http.get(this.globals.baseUrl+'titles')\n    .subscribe( (data) => {\n      this.titles = data\n     });\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n    var x = document.getElementById(\"snackbar\");\n    x.className = \"show\";\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n  notifychange(param){\n    this.notify = param.target.checked;\n  }\n  save(){\n    console.log(this.notify)\n    if(!this.mdescription){\n      this.mdescription = null;\n    }\n    if(!this.mtype){\n      this.mtype = null;\n    }\n    if(!this.mreminderdate){\n      this.mreminderdate = null;\n    }\n    if(!this.mexpecteddate){\n      this.mexpecteddate = null;\n    }\n    if(!this.mtitle){\n      this.toast(\"Please enter title\");\n    }\n    else if(!this.massignee){\n      this.toast(\"Please choose assignee\");\n    }\n    else if(!this.mpriority){\n      this.toast(\"Please choose priority\");\n    }\n    else if(!this.mstatus){\n      this.toast(\"Please choose status\");\n    }\n    else if(!this.mduedate){\n      this.toast(\"Please enter due date\");\n    }    \n    else{\n      var mduedate = this.mduedate ? moment(new Date(this.mduedate)).format(\"YYYY-MM-DD\") : null;\n      var mreminderdate = this.mreminderdate ?  moment(new Date(this.mreminderdate)).format(\"YYYY-MM-DD\") : null;\n      var mexpecteddate = this.mexpecteddate ? moment(new Date(this.mexpecteddate)).format(\"YYYY-MM-DD\") : null;\n      this.formdata = {\n        title : this.mtitle,\n        description : this.mdescription,\n        user_id : this.massignee,\n        type_id : this.mtype,\n        priority_id : this.mpriority,\n        status_id : this.mstatus,\n        due_date : mduedate,\n        reminder_date : mreminderdate,\n        expected_date : mexpecteddate,\n        notify : this.notify\n      }\n      this.http.post(this.globals.baseUrl+'createtask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"New Task has been Created...\");\n            window.location.reload();\n          },\n          error => this.errorMessage = <any>error\n      );\n    }    \n  }\n}\n\n\n\n","module.exports = \"<style>\\r\\n    select, textarea, input{\\r\\n        font-size: 1rem !important;\\r\\n        color: #6e707e !important;\\r\\n    }\\r\\n    .cancelButton{\\r\\n        margin-left: 6%;\\r\\n    }\\r\\n    .form-control{\\r\\n        background-color: #f3f2f2 !important;\\r\\n        border: 0px solid #d1d3e2!important;\\r\\n    }\\r\\n</style>\\r\\n <div class=\\\"container-fluid create-task\\\">\\r\\n    <div class=\\\"card shadow mb-4 list\\\">\\r\\n       <div class=\\\"card-body input-border\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-12\\\">\\r\\n                    <h2>Create title</h2>\\r\\n                <div class=\\\"row\\\">                    \\r\\n                   <div class=\\\"col-md-8\\\">\\r\\n                      <div class=\\\"breadcrumb\\\">\\r\\n                         <div class=\\\"col-md-12\\\">\\r\\n                                <select (ngModel)=\\\"category_id\\\" (input)=\\\"category_id=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Category \\\">\\r\\n                                        <option value=\\\"\\\">Please choose category</option>\\r\\n                                        <option *ngFor=\\\"let category of titleCategories\\\" value=\\\"{{category.id}}\\\">{{category.name}}</option>\\r\\n                                </select>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                   <div class=\\\"col-md-8\\\">\\r\\n                        <div class=\\\"breadcrumb\\\">\\r\\n                           <div class=\\\"col-md-12\\\">\\r\\n                              <input type=\\\"text\\\" (ngModel)=\\\"title\\\" (input)=\\\"title=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the category name here...\\\">\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n                </div>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-12 button-my-sty\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success cursorPointer\\\" (click)=\\\"save()\\\">SAVE &amp;  CLOSE</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger cancelButton\\\" (click)=\\\"cancel()\\\">CANCEL</button>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, Output, EventEmitter } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { RouterModule, Router } from '@angular/router';\nimport { Globals } from './global';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'createtitle-root',\n  templateUrl: './createtitle.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class createTitleComponent {\n  errorMessage: string;\n  private accessToken;titles;\n  private headers;\n  private alertMessage;\n  private role;\n  private userId;\n  private formdata;\n  private options;categories;mcat;\n  private title;showCreateTask;notify;category_id;\n  private mexpecteddate;showTextbox;titleCategories;\n  @Output() closePopup = new EventEmitter(); \n  @Output() saveclose = new EventEmitter(); \n  constructor(private router: Router, private http: HttpClient, private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.showTextbox = false;\n    this.notify = false;\n    this.getTitles();\n  }\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  getTitles() {\n     this.http.get(this.globals.baseUrl+'categories')\n    .subscribe( (data) => {\n      this.titleCategories = data\n     });  \n  }\n\n  showText(){\n    this.showTextbox = true;\n  }\n\n  hideText(){\n    this.showTextbox = false;\n  }\n\n  cancel(){\n    this.closePopup.emit(false);\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n    var x = document.getElementById(\"snackbar\");\n    x.className = \"show\";\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n  notifychange(param){\n    this.notify = param.target.checked;\n  }\n  save(){\n    if(!this.title){\n      this.toast(\"Please enter title\");\n    }\n    else if(!this.category_id){\n      this.toast('Please choose category')\n    }\n    else{\n      this.formdata = {\n        title : this.title,\n        category_id : this.category_id\n      }\n      this.http.post(this.globals.baseUrl+'addtitle',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            // this.toast(\"Title added Successfully...\");\n            this.closePopup.emit(false);\n            this.saveclose.emit();\n          },\n          error => {this.toast(\"Title added failed...\");}\n      ); \n    }     \n  }\n}\n\n\n\n","import * as tslib_1 from \"tslib\";\nimport { Pipe } from '@angular/core';\nimport * as moment from 'moment';\nvar MyFilterPipe = /** @class */ (function () {\n    function MyFilterPipe() {\n    }\n    MyFilterPipe.prototype.transform = function (items, filter) {\n        if (!items || !filter) {\n            return items;\n        }\n        // filter items array, items which match and return true will be\n        // kept, false will be filtered out\n        return items.filter(function (item) { return item.status.indexOf(filter) !== -1; });\n    };\n    MyFilterPipe = tslib_1.__decorate([\n        Pipe({\n            name: 'customFilter',\n            pure: false\n        })\n    ], MyFilterPipe);\n    return MyFilterPipe;\n}());\nexport { MyFilterPipe };\nvar DateFilterPipe = /** @class */ (function () {\n    function DateFilterPipe() {\n    }\n    DateFilterPipe.prototype.transform = function (items, filter) {\n        if (!items || !filter) {\n            return items;\n        }\n        // var custom = filter.getFullYear() + \"-\" + \"0\"+((filter.getMonth())+1) +\"-\"+ filter.getDate() + \" 00:00:00\"; ;\n        var custom = moment(filter).format(\"YYYY-MM-DD\");\n        custom = custom + \" 00:00:00\";\n        return items.filter(function (item) { return item.due_date.indexOf(custom) !== -1; });\n    };\n    DateFilterPipe = tslib_1.__decorate([\n        Pipe({\n            name: 'dateFilter',\n            pure: false\n        })\n    ], DateFilterPipe);\n    return DateFilterPipe;\n}());\nexport { DateFilterPipe };\nvar TitleFilterPipe = /** @class */ (function () {\n    function TitleFilterPipe() {\n    }\n    TitleFilterPipe.prototype.transform = function (items, filter) {\n        if (!items || !filter) {\n            return items;\n        }\n        // filter items array, items which match and return true will be\n        // kept, false will be filtered out\n        return items.filter(function (item) { return item.title.indexOf(filter) !== -1; });\n    };\n    TitleFilterPipe = tslib_1.__decorate([\n        Pipe({\n            name: 'titleFilter',\n            pure: false\n        })\n    ], TitleFilterPipe);\n    return TitleFilterPipe;\n}());\nexport { TitleFilterPipe };\nvar CategoryFilterPipe = /** @class */ (function () {\n    function CategoryFilterPipe() {\n    }\n    CategoryFilterPipe.prototype.transform = function (items, filter) {\n        if (!items || !filter) {\n            return items;\n        }\n        // filter items array, items which match and return true will be\n        // kept, false will be filtered out\n        return items.filter(function (item) { return item.category_id.toString().indexOf(filter) !== -1; });\n    };\n    CategoryFilterPipe = tslib_1.__decorate([\n        Pipe({\n            name: 'catFilter',\n            pure: false\n        })\n    ], CategoryFilterPipe);\n    return CategoryFilterPipe;\n}());\nexport { CategoryFilterPipe };\n//# sourceMappingURL=customFilter.js.map","module.exports = \"<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-4\\\">\\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item active\\\">\\r\\n                <a href=\\\"#\\\"> Dashboard</a>\\r\\n             </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n       <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Dashboard</h6>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n             <p>Task management is the process of managing a task through its life cycle. It involves planning, testing, tracking, and reporting. Task management can help either individual achieve goals, or groups of individuals collaborate and share knowledge for the accomplishment of collective goals. Tasks are also differentiated by complexity, from low to high.</p>\\r\\n             <p>Effective task management requires managing all aspects of a task, including its status, priority, time, human and financial resources assignments, recurrence, dependency, notifications and so on. These can be lumped together broadly into the basic activities of task management.</p>\\r\\n             <p>Managing multiple individuals or team tasks may be assisted by specialized software, for example workflow or project management software. In fact, many people[who?] believe that task management should serve as a foundation for project management activities.</p>\\r\\n            <p>Task management may form part of project management and process management and can serve as the foundation for efficient workflow in an organization. Project managers adhering to task-oriented management have a detailed and up-to-date project schedule, and are usually good at directing team members and moving the project forward.</p>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class dashboardComponent {\n\n}\n\n\n\n","import {Injectable} from '@angular/core';\r\nimport {DayPilot} from 'daypilot-pro-angular';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  resources: any[] = [\r\n    { name: 'Group A', id: 'GA', expanded: true, children: [\r\n      { name: 'Resource 1', id: 'R1' },\r\n      { name: 'Resource 2', id: 'R2' }\r\n    ]},\r\n    { name: 'Group B', id: 'GB', expanded: true, children: [\r\n      { name: 'Resource 3', id: 'R3', unavailable: true},\r\n      { name: 'Resource 4', id: 'R4'}\r\n    ]}\r\n  ];\r\n\r\n  events: any[] = [\r\n    {\r\n      id: '1',\r\n      resource: 'R1',\r\n      start: '2019-05-03',\r\n      end: '2019-05-08',\r\n      text: 'Scheduler Event 1',\r\n      color: '#e69138'\r\n    },\r\n    {\r\n      id: '2',\r\n      resource: 'R2',\r\n      start: '2019-05-02',\r\n      end: '2019-05-05',\r\n      text: 'Scheduler Event 2',\r\n      color: '#6aa84f'\r\n    },\r\n    {\r\n      id: '3',\r\n      resource: 'R2',\r\n      start: '2019-05-06',\r\n      end: '2019-05-09',\r\n      text: 'Scheduler Event 3',\r\n      color: '#3c78d8'\r\n    }\r\n  ];\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getEvents(from: DayPilot.Date, to: DayPilot.Date): Observable<any[]> {\r\n\r\n    // simulating an HTTP request\r\n    return new Observable(observer => {\r\n      setTimeout(() => {\r\n        observer.next(this.events);\r\n      }, 200);\r\n    });\r\n\r\n    // return this.http.get(\"/api/events?from=\" + from.toString() + \"&to=\" + to.toString());\r\n  }\r\n\r\n  getResources(): Observable<any[]> {\r\n\r\n    // simulating an HTTP request\r\n    return new Observable(observer => {\r\n      setTimeout(() => {\r\n        observer.next(this.resources);\r\n      }, 200);\r\n    });\r\n\r\n    // return this.http.get(\"/api/resources\");\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n\r\n@Injectable()\r\nexport class Globals {\r\n\r\n    baseUrl: string = 'http://13.234.116.80:4206/';\r\n    // baseUrl: string = 'http://localhost:8000/';\r\n\r\n}","module.exports = \"<style>\\n    input {\\n        color: #cbcaca!important;\\n    }\\n</style>\\n<nav class=\\\"navbar navbar-expand navbar-light bg-white topbar static-top\\\">\\n        \\n        \\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item dropdown no-arrow d-sm-none\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"searchDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                <i class=\\\"fas fa-search fa-fw\\\"></i>\\n                </a>\\n                <div class=\\\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\\\" aria-labelledby=\\\"searchDropdown\\\">\\n                    <form class=\\\"form-inline mr-auto w-100 navbar-search\\\">\\n                        <div class=\\\"input-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control bg-light border-0 small search-input-border\\\" placeholder=\\\"Search for...\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\">\\n                            <div class=\\\"input-group-append\\\">\\n                                <button class=\\\"btn btn-primary btn-primary-search\\\" type=\\\"button\\\">\\n                                <i class=\\\"fas fa-search fa-sm\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </li>\\n            <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>\\n            <li class=\\\"nav-item dropdown no-arrow mx-1 cursorPointer zin\\\" routerLink=\\\"/calendar\\\" title=\\\"Calendar\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\"  id=\\\"alertsDropdown\\\" role=\\\"button\\\" data-toggle=\\\"\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    <i class=\\\"fa fa-calendar far-font-css\\\" aria-hidden=\\\"true\\\"></i>\\n                </a>\\n            </li>\\n            <li class=\\\"nav-item dropdown no-arrow mx-1 cursorPointer zin\\\" *ngIf=\\\"role=='admin'\\\" (click)=\\\"setshowCreateTask()\\\" title=\\\"Create new task\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\"  id=\\\"alertsDropdown\\\" role=\\\"button\\\" data-toggle=\\\"\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                <i class=\\\"fa fa-plus-circle far-font-css\\\" aria-hidden=\\\"true\\\"></i>\\n                </a>\\n            </li>\\n            <!-- <div class=\\\"topbar-divider d-none d-sm-block\\\" *ngIf=\\\"role=='admin'\\\"></div>\\n            <li class=\\\"nav-item no-arrow mx-1 cursorPointer\\\">\\n                <a class=\\\"nav-link\\\"  role=\\\"\\\" data-toggle=\\\"\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                <i class=\\\"fas fa-glass-martini far-font-css\\\"></i>\\n                </a>\\n            </li> -->\\n            <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>\\n            <li class=\\\"nav-item dropdown no-arrow mx-1 height-css cursorPointer\\\" (click)=\\\"changeNotification()\\\"  (clickOutside)=\\\"onClickedOutsideNotification($event)\\\">\\n                    <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"alertsDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    <i class=\\\"fas fa-bell fa-fw far-font-css\\\"></i>\\n                    <span class=\\\"badge badge-danger badge-counter\\\" *ngIf=\\\"userNotifications\\\">{{userNotifications.length}}</span>\\n                    </a>\\n                    <div class=\\\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"alertsDropdown\\\" [ngClass]=\\\"{'show':showNotifications}\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6 tabs-sty\\\">\\n                                <h6 class=\\\"dropdown-header\\\">\\n                                    Notifications\\n                                </h6>\\n                            </div>\\n                            <div class=\\\"col-md-6 tabs-sty\\\">\\n                                <h6 class=\\\"dropdown-header\\\">\\n                                    <!-- <i class=\\\"fas fa-glass-martini\\\"></i> -->\\n                                </h6>\\n                            </div>\\n                        </div>\\n                        <hr>\\n                        <div class=\\\"scroll-y\\\">\\n                            <a class=\\\"dropdown-item d-flex align-items-center\\\" *ngFor=\\\"let notification of userNotifications\\\" >\\n                                <!-- <div class=\\\"mr-3\\\">\\n                                    <div class=\\\"icon-circle bg-primary\\\">\\n                                        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </div>\\n                                </div> -->\\n                                <div>\\n                                    <!-- <div class=\\\"small text-gray-500\\\">a few second ago</div> -->\\n                                    <div class=\\\"member-sty-css\\\">Member 1 added a task</div>\\n                                    <span class=\\\"fa-calendar-alt-css\\\"><i class=\\\"fas fa-calendar-alt fa-calendar-alt-css\\\"></i> {{notification.created_at| date : 'dd MMM,yyyy'}}</span><br>\\n                                    <span class=\\\"font-weight-bold\\\">\\\"{{notification.title}}\\\"</span>\\n                                </div>\\n                            </a>                       \\n                        </div>\\n                    </div>\\n                </li>\\n                \\n\\n              <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>\\n\\n              <li class=\\\"nav-item dropdown no-arrow mx-1\\\" (clickOutside)=\\\"onClickedOutsideSetting($event)\\\" *ngIf=\\\"role=='admin'\\\" >\\n                <a class=\\\"nav-link dropdown-toggle cursorPointer\\\" (click)=\\\"openSetting()\\\" id=\\\"messagesDropdown2\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n                        <i class=\\\"fas fa-cog fa-fw far-font-css\\\"></i>\\n                </a>\\n                <div class=\\\"dropdown-menu dropdown-menu-right logout-sty\\\" [ngClass]=\\\"{'show':showSettings}\\\" aria-labelledby=\\\"messagesDropdown2\\\">                    \\n                  <a class=\\\"dropdown-item far-tt cursorPointer\\\" *ngIf=\\\"role=='admin'\\\" routerLink=\\\"/category\\\">Add category</a>\\n                  <a class=\\\"dropdown-item far-tt cursorPointer\\\" *ngIf=\\\"role=='admin'\\\" routerLink=\\\"/title\\\">Add title</a>\\n                </div>\\n              </li>\\n\\n              <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>\\n            <li class=\\\"nav-item dropdown no-arrow mx-1\\\" *ngIf=\\\"currentUser\\\" (clickOutside)=\\\"onClickedOutside($event)\\\">\\n                <a class=\\\"nav-link dropdown-toggle cursorPointer\\\" (click)=\\\"openUserAccount()\\\" id=\\\"messagesDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n                  <img class=\\\"img-profile rounded-circle\\\" src=\\\"assets/img/user.png\\\">\\n                    <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">{{currentUser.name}}</span>\\n                </a>\\n                <div class=\\\"dropdown-menu dropdown-menu-right logout-sty\\\" [ngClass]=\\\"{'show':showUserAccount}\\\" aria-labelledby=\\\"messagesDropdown\\\">\\n                    <div>\\n                        <div class=\\\"dropdown-item useraccsettings cursorPointer\\\"><i class=\\\"fa fa-envelope far-top\\\" aria-hidden=\\\"true\\\"></i>  {{currentUser.email}}</div>\\n                        <div class=\\\"dropdown-item useraccsettings cursorPointer\\\"><i class=\\\"fa fa-user far-top\\\" aria-hidden=\\\"true\\\"></i>  didu{{currentUser.id}}</div>\\n                    </div>\\n                  <a class=\\\"dropdown-item far-tt cursorPointer\\\" *ngIf=\\\"role=='admin'\\\" (click)=\\\"toUsers()\\\">Members Activation</a>\\n                  <a class=\\\"dropdown-item far-tt cursorPointer\\\" (click)=\\\"changePass()\\\">Change Password</a>\\n                  <a class=\\\"dropdown-item far-tt cursorPointer\\\" (click)=\\\"logout()\\\">Sign Out</a>\\n                </div>\\n              </li>\\n              \\n            \\n        </ul>\\n        \\n        <div *ngIf=\\\"showCreateTask\\\" >\\n            <div class=\\\"overlay-bg\\\"></div>\\n            <div class=\\\"createPopup\\\">\\n                <createtask-root (closePopup)='setshowCreateTask($event)' ></createtask-root>\\n            </div>\\n        </div>\\n        \\n    </nav>\"","import { Component } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { RouterModule, Router } from '@angular/router';\nimport { Globals } from './global';\n@Component({\n  selector: 'nav-bar',\n  templateUrl: './navigation.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class navBarComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private alertMessage;\n  private role;\n  private userId;\n  private formdata;\n  private currentUser;\n  private showCreateTask:boolean = false;\n  private showNotifications;\n  private userNotifications;showUserAccount;showSettings;\n\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient, private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.checkUser();\n    this.notifications();\n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n  setshowCreateTask(e){\n    if(e){\n      this.showCreateTask = e;\n    } else {\n      this.showCreateTask = !this.showCreateTask;\n    }\n  }\n  checkUser(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'userrole',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n            this.role = this.currentUser.role;\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n\n  notifications(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'notifications',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.userNotifications = response;\n          },\n          error => {this.toast(\"Invalid request...\");}\n      );\n    }\n  }\n\n  showcreate(){\n    this.showCreateTask = true;\n  }\n\n  \n  changeNotification(){\n    this.showNotifications=!this.showNotifications;\n  }\n\n  openUserAccount(){\n    this.showUserAccount = !this.showUserAccount;\n  }\n\n  openSetting(){\n    this.showSettings = !this.showSettings;\n  }\n\n  onClickedOutside(){\n    this.showUserAccount = false;\n  }\n\n  onClickedOutsideSetting(){\n    this.showSettings = false;\n  }\n  onClickedOutsideNotification(){\n    this.showNotifications = false;\n  }\n\n  logout(){\n    this.http.post(this.globals.baseUrl+'logout',null,this.headers)\n      .subscribe(\n          response => {\n            localStorage.removeItem('isAuthenticated');\n            localStorage.removeItem('userId');\n            localStorage.removeItem('userName');\n            this.toast(\"Logout Successfully...\");\n            this.router.navigate(['/login'])\n          },\n          error => {this.toast(\"Login Failed...\");}\n      );\n  }\n\n  changePass(){\n    this.router.navigate(['/changePassword']);\n    this.showUserAccount = false;\n  }\n\n  toUsers(){\n    this.router.navigate(['/users']);\n    this.showUserAccount = false;\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n    var x = document.getElementById(\"snackbar\");\n    x.className = \"show\";\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n}\n\n\n\n","module.exports = \"<style>\\n    .selfButton {\\n        background : #f3f3f3;\\n        color:#333;\\n    }\\n    .form-control-sty {     \\n        border-right-style: solid !important;\\n    }\\n</style>\\n\\n\\n<div id=\\\"wrapper\\\">\\n        <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\n           <div id=\\\"content\\\"> <!-- content Start-->\\n\\t\\t\\t\\t\\n            <nav class=\\\"navbar navbar-expand navbar-light bg-white-login topbar-login static-top shadow\\\"> <!-- Nav Start -->\\n                <div class=\\\"col-md-4\\\">\\n                    <a ><img src=\\\"assets/img/home-left.png\\\" class=\\\"home-left-css\\\"></a>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <img src=\\\"assets/img/logo.png\\\" class=\\\"login-logo-css\\\">\\n                </div>\\n            </nav><!-- Nav Stop -->\\n\\n            <div class=\\\"container-fluid container-fluid-login\\\">\\t<!-- container Start -->\\n            \\n                <div class=\\\"row\\\" >  \\n                    <div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\n                    \\n                    <!-- card Start-->\\n                        <div class=\\\"card border-0 shadow-lg\\\">\\n                            <div class=\\\"card-body p-0\\\">\\n                            \\n                                <div class=\\\"row\\\" style=\\\"height:calc(100vh - 100px);\\\">\\n                                \\n                                    <div class=\\\"col-lg-8 d-none d-lg-block bg-login-image\\\">\\n                                    </div>\\n                                    \\n                                    <div class=\\\"col-lg-4\\\" *ngIf=\\\"router.url=='/login'\\\">\\n                                        <div class=\\\"p-5\\\">\\n                                        \\n                                            <div class=\\\"text-center\\\">\\n                                                <h1 class=\\\"h6 text-gray-900 mb-4\\\">LOG IN / CREATE ACCOUNT</h1>\\n                                            </div>\\n                                            \\n                                            <form class=\\\"user\\\">\\n                                                \\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Enter your email address...\\\" (ngModel)=\\\"lemail\\\" (input)=\\\"lemail=$event.target.value\\\">\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"password\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Type your password...\\\" (ngModel)=\\\"lpassword\\\" (input)=\\\"lpassword=$event.target.value\\\" id=\\\"lpassword\\\">\\n                                                        <div class=\\\"input-group-prepend\\\" (click)=\\\"togglePassword('lpassword')\\\">\\n                                                            <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-eye-slash\\\"></i></div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"custom-control text-center\\\">\\n                                                        <a routerLink=\\\"/forgetpassword\\\"><label class=\\\"custom-control-label-sty forget-css-sty\\\" for=\\\"\\\"><span class=\\\"span-login-css-sty\\\"><i class=\\\"fas fa-key\\\"></i></span>Forget Password?</label></a>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"form-group row\\\">\\n                                                    \\n                                                    <div class=\\\"col-lg-6\\\">\\n                                                        <a (click)=\\\"login()\\\" class=\\\"btn btn-success btn-user btn-block btn-primary\\\">\\n                                                        <span class=\\\"span-login-css-sty\\\"><img src=\\\"assets/img/loading.png\\\" class=\\\"leaf-login-css\\\"></span>LOG IN\\n                                                        </a>\\n                                                    </div>\\n                                                    <div class=\\\"col-lg-6\\\">\\n                                                        <a [routerLink] = \\\"['/register']\\\"  class=\\\"btn btn-primary btn-user btn-block\\\">\\n                                                        <span class=\\\"span-login-css-sty selfButton\\\"><img src=\\\"assets/img/leaf.png\\\" class=\\\"leaf-login-css\\\"></span>CREATE\\n                                                        </a>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                            </form>\\n                                            \\n                                        </div>\\n                                        \\n                                    </div>\\n                                    <div class=\\\"col-lg-4\\\" *ngIf=\\\"router.url=='/register'\\\">\\n                                        <div class=\\\"p-5\\\">\\n                                        \\n                                            <div class=\\\"text-center\\\">\\n                                                <h1 class=\\\"h6 text-gray-900 mb-4\\\">CREATE ACCOUNT / LOG IN</h1>\\n                                            </div>\\n                                            \\n                                            <form class=\\\"user\\\">\\n                                                \\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Enter your name...\\\" (ngModel)=\\\"name\\\" (input)=\\\"name=$event.target.value\\\" >\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Enter your email address...\\\" (ngModel)=\\\"email\\\" (input)=\\\"email=$event.target.value\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Enter your mobile number...\\\" (ngModel)=\\\"mobile\\\" (input)=\\\"mobile=$event.target.value\\\">\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"password\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Type your password...\\\" (ngModel)=\\\"password\\\" (input)=\\\"password=$event.target.value\\\" id=\\\"rpassword\\\">\\n                                                        <div class=\\\"input-group-prepend\\\" (click)=\\\"togglePassword('rpassword')\\\">\\n                                                            <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-eye-slash\\\"></i></div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n\\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"password\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Type confirm your password...\\\" (ngModel)=\\\"cpassword\\\" (input)=\\\"cpassword=$event.target.value\\\" id=\\\"cpassword\\\">\\n                                                        <div class=\\\"input-group-prepend\\\" (click)=\\\"togglePassword('cpassword')\\\">\\n                                                            <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-eye-slash\\\"></i></div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"form-group row\\\">\\n                                                    <div class=\\\"col-lg-6\\\">\\n                                                        <a (click)=\\\"register()\\\" class=\\\"btn btn-primary btn-user btn-block\\\">\\n                                                        <span class=\\\"span-login-css-sty\\\"><img src=\\\"assets/img/leaf.png\\\" class=\\\"leaf-login-css\\\"></span>CREATE\\n                                                        </a>\\n                                                    </div>\\n                                                    <div class=\\\"col-lg-6\\\">\\n                                                        <a [routerLink] = \\\"['/login']\\\" class=\\\"btn btn-success btn-user btn-block\\\">\\n                                                        <span class=\\\"span-login-css-sty selfButton\\\"><img src=\\\"assets/img/loading.png\\\" class=\\\"leaf-login-css\\\"></span>LOG IN\\n                                                        </a>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                            </form>\\n                                            \\n                                        </div>\\n                                        \\n                                    </div>\\n\\n\\n\\n                                    <div class=\\\"col-lg-4\\\" *ngIf=\\\"router.url=='/forgetpassword'\\\">\\n                                        <div class=\\\"p-5\\\">\\n                                        \\n                                            <div class=\\\"text-center\\\">\\n                                                <h1 class=\\\"h6 text-gray-900 mb-4\\\">RESET YOUR ACCOUNT </h1>\\n                                            </div>\\n                                            \\n                                            <form class=\\\"user\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <div class=\\\"input-group mb-2 \\\">\\n                                                        <input type=\\\"text\\\" class=\\\"form-control form-control-sty\\\" name=\\\"nombre\\\" placeholder=\\\"Enter your email address...\\\" (ngModel)=\\\"remail\\\" (input)=\\\"remail=$event.target.value\\\">\\n                                                        <div class=\\\"input-group-prepend\\\">\\n                                                            <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-globe\\\"></i></div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                                <div class=\\\"form-group row\\\">\\n                                                    <div class=\\\"col-lg-6\\\">\\n                                                        <a (click)=\\\"reset()\\\" class=\\\"btn btn-primary btn-user btn-block\\\">\\n                                                        <span class=\\\"span-login-css-sty\\\"><img src=\\\"assets/img/leaf.png\\\" class=\\\"leaf-login-css\\\"></span>RESET\\n                                                        </a>\\n                                                    </div>\\n                                                    <div class=\\\"col-lg-6\\\">\\n                                                        <a [routerLink] = \\\"['/login']\\\" class=\\\"btn btn-success btn-user btn-block\\\">\\n                                                        <span class=\\\"span-login-css-sty selfButton\\\"><img src=\\\"assets/img/loading.png\\\" class=\\\"leaf-login-css\\\"></span>CANCEL\\n                                                        </a>\\n                                                    </div>\\n                                                </div>\\n                                                \\n                                            </form>\\n                                            \\n                                        </div>\\n                                        \\n                                    </div>\\n                                </div>\\n                                \\n                                \\n                            </div>\\n                        </div>\\n                        \\n                    <!-- card Stop-->\\t\\n                        \\n                    </div>\\n                </div>\\n                \\n                \\n                \\n            </div><!-- container Stop -->\\t\\n        </div>\\n        </div>\\n     </div>\\n\\n     <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { Role,registerService } from './register.service';\nimport { HttpClient} from '@angular/common/http';\nimport {Observable} from \"rxjs/Observable\";\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\nimport * as _ from 'lodash';\nimport 'rxjs/Rx';\n\ninterface Course {\n  name: string;\n  id:Number;\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './register.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class registerComponent implements OnInit {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private roles;\n  private name;email;mobile;password;cpassword;lemail;lpassword;remail;\n  private formdata;\n  private alertMessage;\n  private currentUser;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router,private _registerService : registerService, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.checkIsLogin();\n  }\n\n  ngOnInit() {\n      this.getUserRoles();\n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  checkIsLogin(){\n    if (localStorage.getItem(\"isAuthenticated\") === null) {\n      if(this.router.url == '/register'){\n        this.router.navigate(['/register']);\n      }\n      else if(this.router.url == '/forgetpassword'){\n        this.router.navigate(['/forgetpassword']);\n      }\n      else {\n        this.router.navigate(['/login']);\n      }\n    }\n    else{\n      this.router.navigate(['tasklist']);\n    }\n  }\n\n  getUserRoles(){\n    this.http.get(this.globals.baseUrl+'roles')\n     .subscribe( (data) => {this.roles = data});            \n  }\n  register(){\n    if(!this.name){\n      this.toast(\"Please enter user name\");\n    }\n    else if(!this.email){\n      this.toast(\"Please enter email\");\n    }\n    else if(!this.mobile){\n      this.toast(\"Please enter mobile\");\n    }\n    else if(!this.password){\n      this.toast(\"Please enter password\");\n    }\n    else if(!this.cpassword){\n      this.toast(\"Please enter confirm password\");\n    }\n    else if(this.password!=this.cpassword){\n      this.toast(\"Password and confirm password did not match\");\n    }\n    else{\n      this.formdata = {\n        name : this.name,\n        email : this.email,\n        mobile : this.mobile,\n        password : this.password,\n        cpassword : this.cpassword\n      }\n      this.http.post(this.globals.baseUrl+'doSignUp',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n            localStorage.setItem('userId', this.currentUser.id);\n            localStorage.setItem('userName', this.currentUser.name);\n            localStorage.setItem('isAuthenticated', \"success\");\n            this.toast(\"New User has been Registered...\");\n            this.router.navigate(['/tasklist']);            \n          },\n          error => this.errorMessage = <any>error\n      );\n    }    \n  }\n  login(){\n    if(!this.lemail){\n      this.toast(\"Please enter email\");\n    }\n    else if(!this.lpassword){\n      this.toast(\"Please enter password\");\n    }\n    else{\n      this.formdata = {\n        email : this.lemail,\n        password : this.lpassword\n      }\n      this.http.post(this.globals.baseUrl+'doLogin',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            localStorage.setItem('isAuthenticated', \"success\");\n            this.currentUser = response;\n            localStorage.setItem('userId', this.currentUser.user.id);\n            localStorage.setItem('userName', this.currentUser.user.name);\n            \n            this.toast(\"Login Successfully...\");\n            this.router.navigate(['/tasklist'])\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }   \n  }\n\n  reset(){\n    if(!this.remail){\n      this.toast(\"Please enter email\");\n    }\n    else{\n      this.formdata = {\n        email : this.remail\n      }\n      this.http.post(this.globals.baseUrl+'reset',this.formdata,this.headers)\n      .subscribe(\n          response => {            \n            this.toast(\"We have sent email for reset your password...\");\n            this.router.navigate(['/login']);\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n\n  togglePassword(val){\n    var x = document.getElementById(val) as HTMLInputElement;\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {  \n      x.type = \"password\";\n    }\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { HttpClient,HttpHeaders,HttpParams,HttpRequest} from '@angular/common/http';\n// import { Observable } from 'rxjs';  \n// import { map } from 'rxjs/operators';\nexport interface Role {\n  id: Number,\n  name: String\n}\nconst requestOptions = {\n  params: new HttpParams()\n};\nrequestOptions.params.set('foo', 'bar');\nconst API_URL: string = 'http://localhost:8000';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class registerService {\n  private accessToken;\n  private headers;\n  constructor(private oktaAuth: OktaAuthService, private http: HttpClient) {\n    this.init();\n  }\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n  httpGet(url){\n\n    // return this.http.get(API_URL + url, {responseType: 'text'})\n    // .pipe(\n    //   map<Role[]>(res => res)\n    // );\n    // return this.http.get(API_URL + url,this.headers).\n    // map<Role[]>(res => res);\n    // .pipe(\n      // map(res => res);\n    // .pipe(map((response : Response) => {\n    //     return response;   \n    // }));\n    // .map<Role[]>(res => res)\n    // .pipe(\n      // map<Role[],{}>((res) => res));\n  }\n  // httpPost(role,url): Observable<Role> {\n    // return this.http.post(API_URL + url, role,this.headers\n    // ).map(res => res);\n// }\n}\n\n\n\n","module.exports = \"<div class=\\\"container-main\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n                                <li class=\\\"breadcrumb-item active\\\">\\r\\n                                    <a href=\\\"#\\\"> Roles</a>\\r\\n                                </li>\\r\\n                            </ol>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n                    <div class=\\\"card shadow mb-4 list\\\">\\r\\n                        <div class=\\\"card-header py-3\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Add Role</h6>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body input-border\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                  <div class=\\\"row row-mat-top\\\">\\r\\n                                  <div class=\\\"col-md-4\\\">\\r\\n                                  <label class=\\\"form-label\\\">Name</label>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-md-8\\\">\\r\\n                                  <input type=\\\"text\\\" ng-model=\\\"name\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Name\\\">\\r\\n                                  </div>\\r\\n                                  </div>\\r\\n                                  </div>\\r\\n                                 </div>\\r\\n                                  <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n                                  <div class=\\\"text-left\\\">\\r\\n                                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">Save</button>\\r\\n                                  </div>\\r\\n                                  </div> \\r\\n                              </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>                \\r\\n                <div class=\\\"container-fluid\\\">\\r\\n                    <div class=\\\"card shadow mb-4\\\">\\r\\n                        <div class=\\\"card-header py-3\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i>Roles</h6>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"table-responsive\\\">                             \\r\\n                                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th class=\\\"border-none border-none-1\\\" align=\\\"left\\\">Role</th>\\r\\n                                            <th class=\\\"border-none\\\" align=\\\"center\\\">Edit</th>\\r\\n                                            <th class=\\\"border-none\\\" align=\\\"center\\\">Delete</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td>This is the title of the task....</td>\\r\\n                                            <td align=\\\"center\\\"><a data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a></td>\\r\\n                                            <td align=\\\"center\\\"><a data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"><i class=\\\"fas fa-trash-alt\\\"></i></a></td>\\r\\n                                        </tr>                                       \\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>  \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\"","import { Component } from '@angular/core';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './roles.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class rolesComponent {\n  title = 'task';\n}\n\n\n\n","module.exports = \"<!--Side navbar-nav Start-->\\n<ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\n        <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\">\\n            <div class=\\\"sidebar-brand-icon rotate-n-10\\\">\\n                <img src=\\\"assets/img/nav-img.png\\\" class=\\\"nav-sty-img\\\"   id=\\\"sidebarToggle\\\">\\n            </div>\\n            <div><img src=\\\"assets/img/logo.png\\\" class=\\\"login-logo-css-dashboard\\\"></div>\\n        </a>\\n        <hr class=\\\"sidebar-divider my-0\\\">\\n        <li class=\\\"nav-item\\\" >\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/tasklist\\\">\\n            <i class=\\\"fas fa-layer-group\\\"></i>\\n            <span title=\\\"Overview\\\">Overview</span></a>\\n        </li>\\n        <li class=\\\"nav-item active cursorPointer\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"routeTask()\\\">\\n            <i class=\\\"fa fa-th-large\\\"></i>\\n            <span title=\\\"My tasks\\\">My tasks</span></a>\\n        </li>\\n        <li class=\\\"nav-item active cursorPointer\\\">\\n            <a class=\\\"nav-link\\\" >\\n            <i class=\\\"fa fa-th-large\\\"></i>\\n            <span title=\\\"Delegations\\\">Delegations</span></a>\\n        </li>\\n        <li class=\\\"nav-item cursorPointer\\\"  *ngIf=\\\"role=='admin'\\\" title=\\\"Members\\\">\\n            <a class=\\\"nav-link collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseTwo\\\" (click)=\\\"changeClass()\\\">\\n            <i class=\\\"fas fa-user-friends\\\"></i>\\n            <span>Members</span>\\n            </a>\\n            <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" [ngClass]=\\\"{'show':showClass}\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\n                <div class=\\\"bg-white py-2 collapse-inner rounded userdropdown memberact\\\">\\n                    <a class=\\\"collapse-item\\\" (click)=\\\"changeMember(user.id)\\\" *ngFor=\\\"let user of users\\\"><span><img src=\\\"assets/img/person-small.jpg\\\" class=\\\"person-small\\\"></span>{{user.name}}</a>\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n    \\n<!-- Side navbar-nav Stop-->\\t\\n<!-- <div id=\\\"snackbar\\\">{{alertMessage}}</div> -->\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { RouterModule, Router } from '@angular/router';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'side-bar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class sideBarComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private alertMessage;\n  private role;\n  private userId;\n  private formdata;\n  private currentUser;\n  private showClass;\n  private users;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient, private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.checkIsLogin();\n    this.checkUser();\n    this.getUsers();\n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n  logout(){\n    this.http.post(this.globals.baseUrl+'logout',null,this.headers)\n      .subscribe(\n          response => {\n            localStorage.removeItem('isAuthenticated');\n            localStorage.removeItem('userId');\n            localStorage.removeItem('userName');\n            this.toast(\"Logout Successfully...\");\n            this.router.navigate(['/login'])\n          },\n          error => {this.toast(\"Login Failed...\");}\n      );\n  }\n\n  checkIsLogin(){\n    if (localStorage.getItem(\"isAuthenticated\") === null) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  checkUser(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'userrole',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n            this.role = this.currentUser.role;\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n  changeClass(){\n    this.showClass = !this.showClass;\n  }\n  toast(message) {\n      this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n  changeMember(userId){\n    this.router.navigate(['/tasks/'+userId]);\n    setTimeout(function(){\n      window.location.reload();\n    })\n    \n  }\n\n  routeTask(){\n    this.router.navigate(['/tasks']);\n    setTimeout(function(){\n      window.location.reload();\n    })   \n  }\n\n  getUsers(){\n    this.http.get(this.globals.baseUrl+'usersonly')\n    .subscribe( (data) => {\n      this.users = data\n     });  \n  }\n}\n\n\n\n","module.exports = \"<form class=\\\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search searchBar\\\">\\r\\n    <div class=\\\"input-group mb-8\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control bg-light border-0 small search-input-border form-control-sty1 searchtextt\\\" placeholder=\\\"Search Task...\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon2\\\" (ngModel)=\\\"searchTask\\\" (input)=\\\"searchTask=$event.target.value\\\">\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n            <div class=\\\"input-group-text input-sty-css\\\"><i class=\\\"fas fa-search fa-sm\\\"></i></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-3\\\">\\r\\n            \\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item tsb\\\" [ngClass]=\\\"{'active':(router.url=='/tasks' || router.url=='/dashboard')}\\\">\\r\\n                <a routerLink=\\\"/tasks\\\"> Task list</a>\\r\\n             </li>\\r\\n             <li class=\\\"breadcrumb-item tab2 tsb\\\" [ngClass]=\\\"{'active':router.url=='/summary'}\\\">\\r\\n                <a routerLink=\\\"/summary\\\">Summary</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item tab3 tsb\\\" [ngClass]=\\\"{'active':router.url=='/report'}\\\">\\r\\n                <a routerLink=\\\"/report\\\">Reports</a>\\r\\n            </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n       <div class=\\\"border-line-css\\\"></div>\\r\\n        <div  class=\\\"col-md-6\\\">\\r\\n            <a class=\\\"btn btn-secondary btn-icon-split\\\" [ngStyle]=\\\"assignColor(count.color)\\\" *ngFor=\\\"let count of taskCount\\\">\\r\\n            <span class=\\\"text\\\">{{count.name}}</span>\\r\\n            <span class=\\\"icon text-white-50\\\">\\r\\n            <i class=\\\"fas\\\">{{count.taskCount}}</i>\\r\\n            </span>\\r\\n            </a>\\r\\n        </div>\\r\\n        <div class=\\\"border-line-css\\\"></div>\\r\\n        <div  class=\\\"col-md-2 marginLeft2\\\">\\r\\n            <span class=\\\"mr-2 d-lg-inline text-gray-6001 small text-right pull-right\\\"><span class=\\\"span-color-sty\\\">Today</span><br>{{currentDate| date : 'dd MMM yyyy'}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4 mangingtask\\\">\\r\\n        <div class=\\\"card-header py-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> {{currentPage}}</h6>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group mb-2 \\\">\\r\\n\\r\\n                            <input type=\\\"text\\\" #datePicker class=\\\"form-control\\\" [ngModel]=\\\"fduedate\\\" (input)=\\\"fduedate=$event.target.value\\\" bsDatepicker placeholder=\\\"Date Wise Search\\\"\\r\\n                            \\r\\n                            (ngModelChange)=\\\"fduedate = datePicker.value\\\" readonly> \\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group mb-2 \\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <div class=\\\"input-group-text border-remove-left\\\"><i class=\\\"fas fa-glass-martini far-font-css1\\\"></i></div>\\r\\n                            </div>\\r\\n                            <select class=\\\"selectpicker form-control border-remove-right\\\" (ngModel)=\\\"filterTask\\\" (input)=\\\"filterTask=$event.target.value\\\">\\r\\n                                <option value=\\\"\\\">ALL TASKS</option>\\r\\n                                <option value=\\\"INPROGRESS\\\">INPROGRESS</option>\\r\\n                                <option value=\\\"OVERDUE\\\">OVERDUE</option>\\r\\n                                <option value=\\\"COMPLETED\\\">COMPLETED</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-1 col-md-1-mobile \\\" (click)=\\\"printTasks()\\\" *ngIf=\\\"(router.url=='/summary'||router.url=='/report')\\\">\\r\\n                    <i class=\\\"fas fa-print\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- card-header Stop -->\\t\\r\\n        <div class=\\\"card-body\\\" id=\\\"print\\\">\\r\\n            <!-- card-body Start -->\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <!-- Table Start -->\\r\\n                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"border-none border-none-1\\\" align=\\\"left\\\">TASK NAME</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">RESPONSIBLE</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">PROIRITY</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">DUE DATE </th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">STATUS</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">DESCRIPTION</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\" *ngIf=\\\"role=='admin'\\\">DELETE</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">NOTE</th>\\r\\n                        </tr>                        \\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let task of tasks|customFilter:filterTask|dateFilter:fduedate|titleFilter:searchTask; let idx = index\\\" class=\\\"odd\\\">\\r\\n                            <td class=\\\"tasklist\\\" (click)=\\\"showEditTask(task)\\\">{{task.title}}</td>\\r\\n                            <td align=\\\"center\\\" class=\\\"tasklist\\\"><span class=\\\"table-css-img-left\\\"><img src=\\\"assets/img/person-small.jpg\\\" class=\\\"person-small\\\"></span>{{task.assignee}}</td>\\r\\n                            <td class=\\\"low-css tasklist\\\" [ngStyle]=\\\"assignPriorityColor(task.priorityColor)\\\">{{task.priority}}</td>\\r\\n                            <td class=\\\"tasklist\\\">{{task.due_date| date : 'dd-MM-yyyy'}}</td>\\r\\n                            <td class=\\\"low-css1 tasklist\\\" [ngStyle]=\\\"assignColor(task.statusColor)\\\">{{task.status}}</td>\\r\\n                            <td class=\\\"tasklist\\\" align=\\\"center\\\">{{task.description}}</td>\\r\\n                            <td align=\\\"center\\\" class=\\\"cursorPointer tasklist\\\" (click)=\\\"deleteTask(task.id)\\\" *ngIf=\\\"role=='admin'\\\"><i class=\\\"fas fa-trash\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"></i></td>\\r\\n                            <td class=\\\"tasklist\\\" align=\\\"center\\\" id=\\\"task{{task.id}}\\\"><a data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\" data-original-title=\\\"\\\" title=\\\"\\\" style=\\\"color:inherit;\\\" (click)=\\\"toggleNote(task.id,idx)\\\"><i class=\\\"fas fa-file-alt\\\"></i></a></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\\r\\n\\r\\n <div class=\\\"popover fade show bs-popover-top\\\" role=\\\"tooltip\\\" id=\\\"notePopupId\\\" style=\\\"position: absolute;  top: 0px; left: 0px; will-change: transform;\\\" x-placement=\\\"top\\\"  *ngIf=\\\"notePopup\\\" [ngStyle]=\\\"translateHeight\\\">\\r\\n     <div class=\\\"arrow\\\" style=\\\"left: 419px;\\\"></div>\\r\\n     <h3 class=\\\"popover-header\\\"></h3>\\r\\n     <div class=\\\"popover-body\\\">\\r\\n         <div class=\\\"media\\\">\\r\\n             <div class=\\\"media-body\\\"> \\r\\n                 <input type=\\\"text\\\" class=\\\"form-control form-control-popup\\\" name=\\\"example-text-input\\\" placeholder=\\\"Make Your note here related to this task...  |\\\" (ngModel)=\\\"snote\\\" (input)=\\\"snote=$event.target.value\\\"> \\r\\n            </div>\\r\\n            <i class=\\\"fa fa-check fa-check-sty\\\" (click)=\\\"clearNotePopup()\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n <style>\\r\\n    select, textarea, input{\\r\\n        font-size: 1rem !important;\\r\\n        color: #6e707e !important;\\r\\n    }\\r\\n    .cancelButton{\\r\\n        margin-left: 6%;\\r\\n    }\\r\\n</style>\\r\\n<div *ngIf=\\\"editTask\\\" >\\r\\n    <div class=\\\"overlay-bg\\\"></div>\\r\\n    <div class=\\\"createPopup\\\">\\r\\n    <div class=\\\"container-fluid create-task\\\">\\r\\n                        <div class=\\\"card shadow mb-4 list\\\">\\r\\n                            <div class=\\\"card-header py-3\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Edit task</h6>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body input-border\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12 col-lg-12\\\">     \\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"row row-mat-top\\\">\\r\\n                                            <div class=\\\"col-md-12\\\">\\r\\n                                                <select (ngModel)=\\\"mcat\\\" (input)=\\\"mcat=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" *ngIf=\\\"categories\\\" [value]=\\\"mcat\\\" [disabled]=\\\"role!='admin'\\\">\\r\\n                                                    <option value=\\\"\\\">Please choose category</option>\\r\\n                                                    <option *ngFor=\\\"let cat of categories\\\" value=\\\"{{cat.id}}\\\">{{cat.name}}</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"row row-mat-top\\\">\\r\\n                                            <div class=\\\"col-md-12\\\">\\r\\n                                                <select [(ngModel)]=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" [disabled]=\\\"role!='admin'\\\">\\r\\n                                                    <option value=\\\"\\\">Please choose title</option>\\r\\n                                                    <option *ngFor=\\\"let title of titles|catFilter:mcat\\\" value=\\\"{{title.name}}\\\">{{title.name}}</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"row row-mat-top\\\">\\r\\n                                            <div class=\\\"col-md-12\\\">\\r\\n                                            <textarea (ngModel)=\\\"edescription\\\" (input)=\\\"edescription=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Write details about the task...\\\" [value]=\\\"edescription\\\" [readonly]=\\\"role!='admin'\\\"></textarea>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row row-mat-top\\\">\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <label class=\\\"form-label\\\">Assign to</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-8\\\">\\r\\n                                                    <select [(ngModel)]=\\\"eassignee\\\" (input)=\\\"eassignee=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to\\\" *ngIf=\\\"assignee\\\" [disabled]=\\\"role!='admin'\\\">\\r\\n                                                        <option *ngFor=\\\"let assig of assignee\\\" value=\\\"{{assig.id}}\\\">{{assig.name}}</option>\\r\\n                                                    </select>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row row-mat-top\\\">\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <label class=\\\"form-label\\\">Priority</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-8\\\">\\r\\n                                                    <select [(ngModel)]=\\\"epriority\\\" (input)=\\\"epriority=$event.target.value\\\"   class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Priority\\\" *ngIf=\\\"priority\\\"  [disabled]=\\\"role!='admin'\\\">\\r\\n                                                        <option *ngFor=\\\"let pri of priority\\\" value=\\\"{{pri.id}}\\\">{{pri.name}}</option>\\r\\n                                                    </select>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row row-mat-top\\\">\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <label class=\\\"form-label\\\">Due date</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-8\\\">\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"eduedate\\\" #datePicker4 (input)=\\\"eduedate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"eduedate = datePicker4.value\\\" [value]=\\\"eduedate| date:'yyyy-MM-dd'\\\" readonly>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row row-mat-top\\\">\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <label class=\\\"form-label\\\">Expected date</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-8\\\">\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"eexpecteddate\\\" #datePicker5 (input)=\\\"eexpecteddate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"eexpecteddate = datePicker5.value\\\" [value]=\\\"eexpecteddate| date:'yyyy-MM-dd'\\\" readonly>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div class=\\\"row row-mat-top\\\">\\r\\n                                                    <div class=\\\"col-md-4\\\">\\r\\n                                                        <label class=\\\"form-label\\\">Type(Recurring)</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-md-8\\\">\\r\\n                                                        <select [(ngModel)]=\\\"etype\\\" (input)=\\\"etype=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Type\\\" *ngIf=\\\"type\\\"  [disabled]=\\\"role!='admin'\\\">\\r\\n                                                            <option *ngFor=\\\"let ty of type\\\" value=\\\"{{ty.id}}\\\">{{ty.name}}</option>\\r\\n                                                        </select>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div class=\\\"row row-mat-top\\\">\\r\\n                                                    <div class=\\\"col-md-4\\\">\\r\\n                                                        <label class=\\\"form-label\\\">Status</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-md-8\\\">\\r\\n                                                        <select [(ngModel)]=\\\"estatus\\\" (input)=\\\"estatus=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Status\\\" *ngIf=\\\"status\\\">\\r\\n                                                            <option *ngFor=\\\"let st of status\\\" value=\\\"{{st.id}}\\\">{{st.name}}</option>\\r\\n                                                        </select>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div class=\\\"row row-mat-top\\\">\\r\\n                                                    <div class=\\\"col-md-4\\\">\\r\\n                                                        <label class=\\\"form-label\\\">Reminder date</label>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"col-md-8\\\">\\r\\n                                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"ereminderdate\\\" #datePicker6 (input)=\\\"ereminderdate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"ereminderdate = datePicker6.value\\\" [value]=\\\"ereminderdate| date:'yyyy-MM-dd'\\\" readonly>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div class=\\\"row tttnote\\\" *ngIf=\\\"showNote\\\">\\r\\n                                        <div class=\\\"col-md-8 col-lg-8\\\">\\r\\n                                            <div class=\\\"ttnote\\\">Note : {{currentNote}}</div>\\r\\n                                        </div>                       \\r\\n                                        <div class=\\\"col-md-4 col-lg-4\\\">\\r\\n                                            <i class=\\\"fas fa-trash cursorPointer\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\" (click)=\\\"deleteNote()\\\"></i>\\r\\n                                        </div>\\r\\n                                        </div>             \\r\\n                                    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                                        <div class=\\\"text-left\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">SAVE &amp;  CLOSE</button>\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-danger cancelButton\\\"  (click)=\\\"cancel()\\\">CANCEL</button>\\r\\n                                        </div>                                  \\r\\n                                    </div>     \\r\\n                                    \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>   \\r\\n                    </div>\\r\\n                    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router, ActivatedRoute  } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './task.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class taskComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private tasks;\n  private formdata;\n  private alertMessage;categories;titles;mcat;\n  private currentDate;\n  private taskCount;\n  private userId;\n  private memberId;\n  private editTask;\n  private currentTask;currentUser;role;\n  private etitle;edescription;eassignee;epriority;eduedate;eexpecteddate;etype;estatus;ereminderdate;currentTaskId;\n  private options;priority;status;type;assignee;snote;currentNote;\n  private currentPage;fduedate;notePopup;notePopupId;translateHeight;showNote;\n  private safetyenvinstance;businesslocationfieldsvalues;safetytypefieldsvalues;valuestreamfieldsvalues;rrr;\n\n  date: Date = new Date();\n\tsettings = {\n\t\tbigBanner: true,\n\t\ttimePicker: false,\n\t\tformat: 'dd-MM-yyyy',\n\t\tdefaultOpen: false\n\t}\n  \n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals, private route : ActivatedRoute ){\n    this.init();\n    this.gettaskCount();\n    this.getTitles();\n    this.currentDate = new Date();\n    this.memberId = this.router.url.split(\"/tasks/\");\n    if(this.memberId[0] != '/tasks'){\n      this.memberId = this.memberId[1];\n    }\n    // this.memberId = this.router.url;\n    this.getTasks(this.memberId);\n    this.editTask = false;\n    // this.etitle = 'jsnadjnasd';\n    this.checkUser();\n    var currentUrl = this.router.url.split('/');\n    this.currentPage = currentUrl[1].toUpperCase();\n    if(this.currentPage == 'DASHBOARD' || this.currentPage == 'TASKS'){\n      this.currentPage = 'Manage Tasks';\n    }\n    else if(this.currentPage=='SUMMARY'){\n      this.currentPage = 'Summary';\n    }\n    else if(this.currentPage=='REPORT'){\n      this.currentPage = 'Report';\n    }\n    this.showNote = false;\n  }\n  ngOnInit() {\n    \n  }\n\n  async init() {\n    this.tasks = [];\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  getTasks(memberId){\n    if(memberId && (this.memberId[0] != '/tasks')) {\n      this.userId = memberId;\n    }\n    else{\n      this.userId = localStorage.getItem('userId');\n    }\n    \n     this.formdata = {\n      id : this.userId\n    }\n     \n     this.http.post(this.globals.baseUrl+'gettask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.tasks = response\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n  }\n\n  gettaskCount(){\n    this.userId = localStorage.getItem('userId');\n     this.formdata = {\n      id : this.userId\n    }\n    this.http.post(this.globals.baseUrl+'gettaskCount',this.formdata,this.headers)\n    .subscribe( (data) => {\n      this.taskCount = data\n     });  \n  }\n\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n  assignColor(color){\n    return {\n      background : color\n    };\n  }\n  assignPriorityColor(color){\n    return {\n      color : color\n    }\n  }\n\n  \n  showEditTask(task){\n    this.getOptions();\n    this.editTask = true;\n    this.currentTask = task;\n    this.etitle = task['title'];    \n    this.edescription = task['description'];   \n    this.eassignee = task['user_id'] ;\n    this.epriority = task['priority_id'];\n    task['due_date'] = moment(new Date(task['due_date'])).format(\"MM/DD/YYYY\");\n    this.eduedate = task['due_date'];\n    task['expected_date'] = moment(new Date(task['expected_date'])).format(\"MM/DD/YYYY\");\n    this.eexpecteddate = task['expected_date'];\n    this.etype = task['type_id'];\n    this.estatus = task['status_id'];\n    task['reminder_date'] = moment(new Date(task['reminder_date'])).format(\"MM/DD/YYYY\");\n    this.ereminderdate = task['reminder_date'];\n    this.currentTaskId = task['id'];\n    this.currentNote = task['note'];\n    if(task['titles'])\n        this.mcat = task['titles']['category_id'];\n    if(this.currentNote){\n      this.showNote = true;\n    }    \n  }\n\n  cancel(){\n    this.editTask = false;\n    this.router.navigate(['/tasks'])\n  }\n\n  checkUser(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'userrole',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n            this.role = this.currentUser.role;\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n\n  getOptions() {\n    this.http.get(this.globals.baseUrl+'getOptions')\n      .subscribe(\n          response => {\n            this.options = response;\n            this.priority = this.options.priority;\n            this.status = this.options.status;\n            this.type = this.options.type;\n            this.assignee = this.options.users\n          },\n          error => {this.toast(\"Request Failed...\");}\n      );\n  }\n\n  deleteTask(id){\n    this.formdata = {\n      id : id\n    }\n    this.http.post(this.globals.baseUrl+'deletetask',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Task has been deleted...\");\n          this.router.navigate(['/tasks'])\n          setTimeout(function(){\n            window.location.reload();\n          })\n        },\n        error => this.errorMessage = <any>error\n    );\n  }\n\n  onDateSelect(value){\n    this.fduedate = value.value;\n  }\n\n  clear(){\n    // this.safetyenvinstance = new SheSafetyEnvIncidentModal();\n    // this.businesslocationfieldsvalues = 0;\n    // this.safetytypefieldsvalues = 0;\n    // this.valuestreamfieldsvalues = 0;\n    // this.safetyenvinstance.IncidentDateTime = new Date;\n    // this.safetyenvinstance.ReportedDateTime = new Date;\n  }\n\n  toggleNote(id,index){\n    if(this.notePopupId!=id){\n      this.notePopup=true;\n      this.notePopupId=id;\n      var translate = 267 + (index*50)+\"px\";\n      this.translateHeight = {\n        transform: \"translate3d(997px, \"+ translate +\", 0px)\"\n      }  \n    }\n    else{\n      this.notePopup=false;\n      this.notePopupId=null;\n    } \n  }\n\n  clearNotePopup(){\n    if(this.snote) {\n      this.formdata = {\n        id : this.notePopupId,\n        note : this.snote\n      }\n      this.http.post(this.globals.baseUrl+'addNote',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.notePopup=false;\n            this.notePopupId=null;\n            this.toast(\"Saved successfully...\");\n            setTimeout(function(){\n              window.location.reload();\n            })\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n    else{\n      this.toast(\"Please enter the note...\");\n    }    \n  }\n\n  printTasks(){\n      this.rrr = false;\n      var divId = 'print';\n      \n      var content = document.getElementById(divId).innerHTML;\n      var mywindow = window.open('', 'Print', 'height=600,width=800');\n  \n      mywindow.document.write('<html><head><title>Print</title>');\n      mywindow.document.write('</head><body >');\n      mywindow.document.write(content);\n      mywindow.document.write('</body></html>');\n  \n      mywindow.document.close();\n      mywindow.focus()\n      mywindow.print();\n      mywindow.close();\n      setTimeout(function(){\n        this.rrr = true;\n      })\n      \n      return true;\n  }\n\n  getTitles(){\n    this.http.get(this.globals.baseUrl+'categoriesTitle')\n    .subscribe( \n      response => {\n        this.categories = response\n      },\n      error => {}\n    );\n    this.http.get(this.globals.baseUrl+'titles')\n    .subscribe( (data) => {\n      this.titles = data\n     });\n  }\n\n  deleteNote(){\n    this.formdata = {\n      id : this.currentTaskId\n    }\n    this.http.post(this.globals.baseUrl+'deleteNote',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Deleted successfully...\");\n          this.showNote = false;\n        },\n        error => {this.toast(\"Invalid credentials...\");}\n    );\n  }\n\n  save(){\n    if(!this.edescription){\n      this.edescription = null;\n    }\n    if(!this.etype){\n      this.etype = null;\n    }\n    if(!this.ereminderdate){\n      this.ereminderdate = null;\n    }\n    if(!this.eexpecteddate){\n      this.eexpecteddate = null;\n    }\n    if(!this.etitle){\n      this.toast(\"Please enter title\");\n    }\n    else if(!this.eassignee){\n      this.toast(\"Please choose assignee\");\n    }\n    else if(!this.epriority){\n      this.toast(\"Please choose priority\");\n    }\n    else if(!this.estatus){\n      this.toast(\"Please choose status\");\n    }\n    else if(!this.eduedate){\n      this.toast(\"Please enter due date\");\n    }\n    \n    else{\n      var duedate = moment(new Date(this.eduedate)).format(\"YYYY-MM-DD\");\n      var ereminderdate = moment(new Date(this.ereminderdate)).format(\"YYYY-MM-DD\");\n      var eexpecteddate = moment(new Date(this.eexpecteddate)).format(\"YYYY-MM-DD\");\n      this.formdata = {\n        title : this.etitle,\n        description : this.edescription,\n        user_id : this.eassignee,\n        type_id : this.etype,\n        priority_id : this.epriority,\n        status_id : this.estatus,\n        due_date : duedate,\n        reminder_date : ereminderdate,\n        expected_date : eexpecteddate,\n        id : this.currentTaskId\n      }\n      this.http.post(this.globals.baseUrl+'updatetask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Task has been Updated...\");\n            this.router.navigate(['/tasks'])\n            setTimeout(function(){\n              window.location.reload();\n            })\n          },\n          error => this.errorMessage = <any>error\n      );\n    }    \n}\n\n}\n\n\n\n","module.exports = \"<div>\\n    <daypilot-scheduler [config]=\\\"config\\\" [events]=\\\"events\\\" #scheduler ></daypilot-scheduler>\\n</div>\\n\\n<style>\\nselect, textarea, input{\\n    font-size: 1rem !important;\\n    color: #6e707e !important;\\n}\\n.cancelButton{\\n    margin-left: 6%;\\n}\\n</style>\\n<div  class=\\\"col-md-6 countBar\\\">\\n    <a class=\\\"btn btn-secondary btn-icon-split\\\" [ngStyle]=\\\"assignColor(count.color)\\\" *ngFor=\\\"let count of taskCount\\\">\\n    <span class=\\\"text\\\">{{count.name}}</span>\\n    <span class=\\\"icon text-white-50\\\">\\n    <i class=\\\"fas\\\">{{count.taskCount}}</i>\\n    </span>\\n    </a>\\n</div>\\n\\n<div *ngIf=\\\"showCreateTask\\\" >\\n    <div class=\\\"overlay-bg\\\"></div>\\n    <div class=\\\"createPopup\\\">\\n        <createtask-root (closePopup)='setshowCreateTask($event)' ></createtask-root>\\n    </div>\\n</div>\\n\\n\\n <div *ngIf=\\\"editTask\\\" >\\n    <div class=\\\"overlay-bg\\\"></div>\\n    <div class=\\\"createPopup\\\">\\n    <div class=\\\"container-fluid create-task\\\">\\n                        <div class=\\\"card shadow mb-4 list\\\">\\n                            <div class=\\\"card-header py-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-8\\\">\\n                                        <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Edit task</h6>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"card-body input-border\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 col-lg-12\\\">     \\n                                    <div class=\\\"form-group\\\">\\n                                        <div class=\\\"row row-mat-top\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                            <!-- <input type=\\\"text\\\" (ngModel)=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the title here...\\\" [value]=\\\"etitle\\\" [readonly]=\\\"role!='admin'\\\"> -->\\n                                            <select (ngModel)=\\\"mcat\\\" (input)=\\\"mcat=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" *ngIf=\\\"categories\\\" [value]=\\\"mcat\\\" [disabled]=\\\"role!='admin'\\\">\\n                                                <option value=\\\"\\\">Please choose category</option>\\n                                                <option *ngFor=\\\"let cat of categories\\\" value=\\\"{{cat.id}}\\\">{{cat.name}}</option>\\n                                            </select>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <div class=\\\"row row-mat-top\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <select [(ngModel)]=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to \\\" [disabled]=\\\"role!='admin'\\\">\\n                                                    <option value=\\\"\\\">Please choose title</option>\\n                                                    <option *ngFor=\\\"let title of titles|catFilter:mcat\\\" value=\\\"{{title.name}}\\\">{{title.name}}</option>\\n                                                </select>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <div class=\\\"row row-mat-top\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                            <textarea (ngModel)=\\\"edescription\\\" (input)=\\\"edescription=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Write details about the task...\\\" [value]=\\\"edescription\\\" [readonly]=\\\"role!='admin'\\\"></textarea>\\n                                            </div>\\n                                        </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-6 col-lg-6\\\">     \\n                                        <div class=\\\"form-group\\\">\\n                                            <div class=\\\"row row-mat-top\\\">\\n                                                <div class=\\\"col-md-4\\\">\\n                                                    <label class=\\\"form-label\\\">Assign to</label>\\n                                                </div>\\n                                                <div class=\\\"col-md-8\\\">\\n                                                    <select [(ngModel)]=\\\"eassignee\\\" (input)=\\\"eassignee=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Assigned to\\\" *ngIf=\\\"assignee\\\" [disabled]=\\\"role!='admin'\\\">\\n                                                        <option *ngFor=\\\"let assig of assignee\\\" value=\\\"{{assig.id}}\\\" >{{assig.name}}</option>\\n                                                    </select>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <div class=\\\"row row-mat-top\\\">\\n                                                <div class=\\\"col-md-4\\\">\\n                                                    <label class=\\\"form-label\\\">Priority</label>\\n                                                </div>\\n                                                <div class=\\\"col-md-8\\\">\\n                                                    <select [(ngModel)]=\\\"epriority\\\" (input)=\\\"epriority=$event.target.value\\\"   class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Priority\\\" *ngIf=\\\"priority\\\"  [disabled]=\\\"role!='admin'\\\">\\n                                                        <option *ngFor=\\\"let pri of priority\\\" value=\\\"{{pri.id}}\\\">{{pri.name}}</option>\\n                                                    </select>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <div class=\\\"row row-mat-top\\\">\\n                                                <div class=\\\"col-md-4\\\">\\n                                                    <label class=\\\"form-label\\\">Due date</label>\\n                                                </div>\\n                                                <div class=\\\"col-md-8\\\">\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"eduedate\\\" #datePicker4 (input)=\\\"eduedate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"eduedate = datePicker4.value\\\" [value]=\\\"eduedate| date:'yyyy-MM-dd'\\\" readonly>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <div class=\\\"row row-mat-top\\\">\\n                                                <div class=\\\"col-md-4\\\">\\n                                                    <label class=\\\"form-label\\\">Expected date</label>\\n                                                </div>\\n                                                <div class=\\\"col-md-8\\\">\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"eexpecteddate\\\" #datePicker5 (input)=\\\"eexpecteddate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"eexpecteddate = datePicker5.value\\\" [value]=\\\"eexpecteddate| date:'yyyy-MM-dd'\\\" readonly>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-6 col-lg-6\\\">     \\n                                            <div class=\\\"form-group\\\">\\n                                                <div class=\\\"row row-mat-top\\\">\\n                                                    <div class=\\\"col-md-4\\\">\\n                                                        <label class=\\\"form-label\\\">Type(Recurring)</label>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-8\\\">\\n                                                        <select [(ngModel)]=\\\"etype\\\" (input)=\\\"etype=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Type\\\" *ngIf=\\\"type\\\"  [disabled]=\\\"role!='admin'\\\">\\n                                                            <option *ngFor=\\\"let ty of type\\\" value=\\\"{{ty.id}}\\\">{{ty.name}}</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <div class=\\\"row row-mat-top\\\">\\n                                                    <div class=\\\"col-md-4\\\">\\n                                                        <label class=\\\"form-label\\\">Status</label>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-8\\\">\\n                                                        <select [(ngModel)]=\\\"estatus\\\" (input)=\\\"estatus=$event.target.value\\\" class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Status\\\" *ngIf=\\\"status\\\">\\n                                                            <option *ngFor=\\\"let st of status\\\" value=\\\"{{st.id}}\\\" >{{st.name}}</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <div class=\\\"row row-mat-top\\\">\\n                                                    <div class=\\\"col-md-4\\\">\\n                                                        <label class=\\\"form-label\\\">Reminder date</label>\\n                                                    </div>\\n                                                    <div class=\\\"col-md-8\\\">\\n                                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"ereminderdate\\\" #datePicker6 (input)=\\\"ereminderdate=$event.target.value\\\" bsDatepicker (ngModelChange)=\\\"ereminderdate = datePicker6.value\\\" [value]=\\\"ereminderdate| date:'yyyy-MM-dd'\\\" readonly>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    <div class=\\\"col-md-6 col-lg-6\\\">\\n                                        <div class=\\\"text-left\\\">\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">SAVE &amp;  CLOSE</button>\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-danger cancelButton\\\"  (click)=\\\"cancel()\\\">CANCEL</button>\\n                                        </div>                                  \\n                                    </div> \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>   \\n                    </div>\\n                    </div>\\n                    \\n  <div id=\\\"snackbar\\\">{{alertMessage}}</div> \\n\\n\\n\\n  <div *ngIf=\\\"showTextbox\\\">\\n        <div class=\\\"overlay-bg\\\"></div>\\n        <div class=\\\"createPopup\\\">\\n            <createcategory-root (saveclose)=\\\"getTitles()\\\" (closePopup)='setshowCreateTask($event)' ></createcategory-root>\\n        </div>\\n     </div>\\n    \\n    \\n     <div *ngIf=\\\"showTitlebox\\\">\\n    <div class=\\\"overlay-bg\\\"></div>\\n    <div class=\\\"createPopup\\\">\\n        <createtitle-root (saveclose)=\\\"getTitles()\\\" (closePopup)='setshowCreateTitle($event)' ></createtitle-root>\\n    </div>\\n    </div>\"","import {  Component,  ChangeDetectionStrategy,  ViewChild,  TemplateRef, OnInit,AfterViewInit} from '@angular/core';\nimport {DayPilot, DayPilotSchedulerComponent} from 'daypilot-pro-angular';\nimport { Globals } from './global';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport {DataService} from './data.service'; {}\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-root',\n  // styleUrls: ['styles.css'],\n  templateUrl: './tasklist.component.html',\n  providers: [ Globals ] \n})\nexport class taskListComponent {\n\n  @ViewChild('scheduler')\n  scheduler: DayPilotSchedulerComponent;\n\n  @ViewChild('taskListCompo')\n  taskListCompo: taskListComponent;\n\n  private events;titles;categories;showTextbox;showTitlebox;\n  private resources;editTask;etitle;edescription;eassignee;epriority;eduedate;eexpecteddate;etype;estatus;ereminderdate;;currentTaskId;options;\n  username;priority;status;type;assignee;userId;formdata;headers;currentUser;role;alertMessage;accessToken;errorMessage;\n   enableTask:Boolean = false;showCreateTask;mcat;taskCount;\n\n   constructor(private ds: DataService,private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals) {\n    this.init();\n    this.getOptions();\n    this.getTitles();\n    this.gettaskCount();\n    this.editTask = false;\n    this.checkUser();\n    this.showCreateTask = false;\n    this.showTextbox = false;\n    this.showTitlebox = false;\n    this.http.get(this.globals.baseUrl+'categoriesTitle')\n    .subscribe( \n      response => {\n        this.enableTask = true;\n        this.config.resources = response;\n        for(var i =0 ;i<this.config.resources.length;i++){\n          for(var j =0 ;j<this.config.resources[i].children.length;j++){\n            this.config.resources[i].children[j].id = \"s\"+this.config.resources[i].children[j].id;\n          }\n        }\n      },\n      error => {}\n    );\n\n    this.http.get(this.globals.baseUrl+'getevents')\n    .subscribe( \n      response => {\n        this.events = response;\n        for(var i =0;i<this.events.length;i++){\n          this.events[i].start = moment(new Date(this.events[i].due_date)).format(\"YYYY-MM-DD\");\n          this.events[i].end = moment(new Date(this.events[i].due_date)).format(\"YYYY-MM-DD\");\n          if(this.events[i].titles) {\n            this.events[i].resource = \"s\"+this.events[i].titles.id;\n          }          \n          this.events[i].text = this.events[i].status;\n        }\n      },\n      error => {}\n    );\n  }\n  config: any = {\n    locale: \"en-us\",\n    cellWidthSpec: \"Fixed\",\n    cellWidth: 40,\n    crosshairType: \"Header\",\n    timeHeaders: [{\"groupBy\":\"Month\"},{\"groupBy\":\"Day\",\"format\":\"d\"}],\n    scale: \"Day\",\n    days: DayPilot.Date.today().daysInMonth(),\n    startDate: DayPilot.Date.today().firstDayOfMonth(),\n    showNonBusiness: true,\n    businessWeekends: false,\n    floatingEvents: true,\n    eventHeight: 30,\n    eventMovingStartEndEnabled: false,\n    eventResizingStartEndEnabled: false,\n    timeRangeSelectingStartEndEnabled: false,\n    groupConcurrentEvents: false,\n    eventStackingLineHeight: 100,\n    allowEventOverlap: true,\n    timeRangeSelectedHandling: \"Enabled\",\n    onTimeRangeSelected: args => {\n      this.showCreateTask = true;\n      // var dp = this;\n      // DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function(modal) {\n      //   dp.clearSelection();\n      //   if (!modal.result) { return; }\n      //   dp.events.add(new DayPilot.Event({\n      //     start: args.start,\n      //     end: args.end,\n      //     id: DayPilot.guid(),\n      //     resource: args.resource,\n      //     text: modal.result\n      //   }));\n      // });\n    },\n    eventMoveHandling: \"Update\",\n    onEventMoved: function (args) {\n      this.message(\"Event moved\");\n    },\n    eventResizeHandling: \"Update\",\n    onEventResized: function (args) {\n      this.message(\"Event resized\");\n    },\n    eventDeleteHandling: \"Update\",\n    onEventDeleted: function (args) {\n      this.message(\"Event deleted\");\n    },\n    eventClickHandling: \"Update\",\n\n\n    \n    \n    onEventClicked: args => {\n      if(args && args.e && args.e.data) {\n        var data = args.e.data;\n        this.etitle = data['title'];    \n        this.edescription = data['description'];   \n        this.eassignee = data['user_id'] ;\n        this.epriority = data['priority_id'];\n        data['due_date'] = moment(new Date(data['due_date'])).format(\"MM/DD/YYYY\");\n        this.eduedate = data['due_date'];\n        data['expected_date'] = moment(new Date(data['expected_date'])).format(\"MM/DD/YYYY\");\n        this.eexpecteddate = data['expected_date'];\n        this.etype = data['type_id'];\n        this.estatus = data['status_id'];\n        data['reminder_date'] = moment(new Date(data['reminder_date'])).format(\"MM/DD/YYYY\");\n        this.ereminderdate = data['reminder_date'];\n        this.currentTaskId = data['id'];\n        if(data['titles'])\n        this.mcat = data['titles']['category_id'];\n        this.editTask = true;\n      }\n      else{\n        this.toast(\"Event does not found\");\n      }\n    },\n    eventHoverHandling: \"Bubble\",\n    bubble: new DayPilot.Bubble({\n      onLoad: function(args) {\n        // if event object doesn't specify \"bubbleHtml\" property \n        // this onLoad handler will be called to provide the bubble HTML\n        if(args && args.source && args.source.data) {\n          args.html = args.source.data.title + \" - \" + args.source.data.status;\n        }\n        else {\n          args.html = \"Event details\";\n        }\n        \n      }\n    }),\n    treeEnabled: true,\n  };\n\n  async init() {    \n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  showText(){\n    this.showTextbox = true;\n  }\n\n  showTitle(){\n    this.showTitlebox = true;\n  }\n\n  setshowCreateCategory(e){\n    if(e){\n      this.showTextbox = e;\n    } else {\n      this.showTextbox = !this.showTextbox;\n    }\n  }\n\n  setshowCreateTitle(e){\n    if(e){\n      this.showTitlebox = e;\n    } else {\n      this.showTitlebox = !this.showTitlebox;\n    }\n  }\n\n  getTitles(){\n    this.http.get(this.globals.baseUrl+'categoriesTitle')\n    .subscribe( \n      response => {\n        this.categories = response\n      },\n      error => {}\n    );\n    this.http.get(this.globals.baseUrl+'titles')\n    .subscribe( (data) => {\n      this.titles = data\n     });\n  }\n\n  getOptions() {\n    this.http.get(this.globals.baseUrl+'getOptions')\n      .subscribe(\n          response => {\n            this.options = response;\n            this.priority = this.options.priority;\n            this.status = this.options.status;\n            this.type = this.options.type;\n            this.assignee = this.options.users            \n          },\n          error => {this.toast(\"Request Failed...\");}\n      );\n  }\n\n  checkUser(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'userrole',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n            this.role = this.currentUser.role;\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n  cancel(){\n    this.editTask = false;\n  }\n\n  gettaskCount(){\n    this.userId = localStorage.getItem('userId');\n     this.formdata = {\n      id : this.userId\n    }\n    this.http.post(this.globals.baseUrl+'gettaskCount',this.formdata,this.headers)\n    .subscribe( (data) => {\n      this.taskCount = data\n     });  \n  }\n\n  save(){\n    if(!this.edescription){\n      this.edescription = null;\n    }\n    if(!this.etype){\n      this.etype = null;\n    }\n    if(!this.ereminderdate){\n      this.ereminderdate = null;\n    }\n    if(!this.eexpecteddate){\n      this.eexpecteddate = null;\n    }\n    if(!this.etitle){\n      this.toast(\"Please enter title\");\n    }\n    else if(!this.eassignee){\n      this.toast(\"Please choose assignee\");\n    }\n    else if(!this.epriority){\n      this.toast(\"Please choose priority\");\n    }\n    else if(!this.estatus){\n      this.toast(\"Please choose status\");\n    }\n    else if(!this.eduedate){\n      this.toast(\"Please enter due date\");\n    }\n    \n    else{\n      var eduedate = moment(new Date(this.eduedate)).format(\"YYYY-MM-DD\");\n      var ereminderdate = moment(new Date(this.ereminderdate)).format(\"YYYY-MM-DD\");\n      var eexpecteddate = moment(new Date(this.eexpecteddate)).format(\"YYYY-MM-DD\");\n      this.formdata = {\n        title : this.etitle,\n        description : this.edescription,\n        user_id : this.eassignee,\n        type_id : this.etype,\n        priority_id : this.epriority,\n        status_id : this.estatus,\n        due_date : eduedate,\n        reminder_date : ereminderdate,\n        expected_date : eexpecteddate,\n        id : this.currentTaskId\n      }\n      this.http.post(this.globals.baseUrl+'updatetask',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Task has been Updated...\");\n            this.router.navigate(['/tasklist'])\n            setTimeout(function(){\n              window.location.reload();\n            })\n          },\n          error => this.errorMessage = <any>error\n      );\n    }    \n  }\n\n  setshowCreateTask(e){\n    if(e){\n      this.showCreateTask = e;\n    } else {\n      this.showCreateTask = !this.showCreateTask;\n    }\n  }\n\n  assignColor(color){\n    return {\n      background : color\n    };\n  }\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n  \n\n}\n","module.exports = \"<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-4\\\">\\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item active\\\">\\r\\n                <a href=\\\"\\\" *ngIf=\\\"!showEdit\\\"> Add title</a>\\r\\n                <a href=\\\"\\\" *ngIf=\\\"showEdit\\\"> Update title</a>\\r\\n             </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n       <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\" *ngIf=\\\"!showEdit\\\"><i class=\\\"fas fa-layer-group\\\"></i> Add title</h6>\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\" *ngIf=\\\"showEdit\\\"><i class=\\\"fas fa-layer-group\\\"></i> Update title</h6>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-body input-border\\\" *ngIf=\\\"!showEdit\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                                <label class=\\\"form-label\\\">Category</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <select (ngModel)=\\\"category_id\\\" (input)=\\\"category_id=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Category \\\">\\r\\n                                    <option value=\\\"\\\">Please choose category</option>\\r\\n                                    <option *ngFor=\\\"let category of titleCategories\\\" value=\\\"{{category.id}}\\\">{{category.name}}</option>\\r\\n                            </select>\\r\\n                        </div>   \\r\\n                    </div>\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label class=\\\"form-label\\\">Title</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"text\\\" (ngModel)=\\\"title\\\" (input)=\\\"title=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the title here...\\\">\\r\\n                        </div>\\r\\n                    </div>                                        \\r\\n                  </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"text-left\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n                  </div>\\r\\n                  </div> \\r\\n              </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"card-body input-border\\\" *ngIf=\\\"showEdit\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                                <label class=\\\"form-label\\\">Category</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <select (ngModel)=\\\"ecategory_id\\\" (input)=\\\"ecategory_id=$event.target.value\\\" class=\\\"form-control custom-select\\\" name=\\\"t\\\" placeholder=\\\"Category \\\">\\r\\n                                    <option value=\\\"\\\">Please choose category</option>\\r\\n                                    <option *ngFor=\\\"let category of titleCategories\\\" value=\\\"{{category.id}}\\\">{{category.name}}</option>\\r\\n                            </select>                        \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label class=\\\"form-label\\\">Title</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the title here...\\\">\\r\\n                        </div>\\r\\n                    </div> \\r\\n                  </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"text-left\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">Save</button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                  </div>\\r\\n                  </div> \\r\\n              </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <!-- Table Start -->\\r\\n            <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Title</th>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Category</th>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Edit</th>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Delete</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let title of titles\\\" class=\\\"odd\\\">\\r\\n                            <td align=\\\"center\\\">{{title.name}}</td>\\r\\n                            <td align=\\\"center\\\">{{title.category_name}}</td>\\r\\n                            <td align=\\\"center\\\" (click)=\\\"enableEdit(title.id,title.name,title.category_id)\\\" class=\\\"cursorPointer\\\">\\r\\n                                <i class=\\\"fas fa-pencil-alt\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"></i>\\r\\n                            </td>\\r\\n                            <td align=\\\"center\\\" (click)=\\\"deleteTitle(title.id)\\\" class=\\\"cursorPointer\\\">\\r\\n                                    <i class=\\\"fas fa-trash\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"></i>\\r\\n                            </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './title.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class titleComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private titles;\n  private formdata;\n  private alertMessage;category_id;\n  private title;titleCategories;\n  private showEdit;currentTitleId;etitle;ecategory_id;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.showEdit = false;\n    \n  }\n  ngOnInit() {\n    this.getTitles();\n  }\n  \n  getTitles() {\n    this.http.get(this.globals.baseUrl+'titles')\n    .subscribe( (data) => {\n      this.titles = data\n     });    \n     this.http.get(this.globals.baseUrl+'categories')\n    .subscribe( (data) => {\n      this.titleCategories = data\n     });  \n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  save(){\n    if(!this.title){\n      this.toast(\"Please enter title\");\n    }\n    else if(!this.category_id){\n      this.toast('Please choose category')\n    }\n    else{\n      this.formdata = {\n        title : this.title,\n        category_id : this.category_id\n      }\n      this.http.post(this.globals.baseUrl+'addtitle',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Title added Successfully...\");\n            window.location.reload();\n          },\n          error => {this.toast(\"Title added failed...\");}\n      ); \n    }     \n  }\n\n  deleteTitle(id){\n    this.formdata = {\n      id : id\n    }\n    this.http.post(this.globals.baseUrl+'deletetitle',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Title has been deleted...\");\n          this.router.navigate(['/titles'])\n          setTimeout(function(){\n            window.location.reload();\n          })\n        },\n        error => this.errorMessage = <any>error\n    );\n  }\n\n  enableEdit(id,name,categoryId){    \n    this.currentTitleId = id;\n    this.etitle = name;\n    this.showEdit = true;\n    this.ecategory_id = categoryId;\n  }\n\n  update(){    \n    this.formdata = {\n      id : this.currentTitleId,\n      title : this.etitle,\n      category_id : this.ecategory_id\n    }\n    this.http.post(this.globals.baseUrl+'updatetitle',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Title has been updated...\");\n          this.router.navigate(['/titles'])\n          setTimeout(function(){\n            window.location.reload();\n          })\n        },\n        error => this.errorMessage = <any>error\n    );\n  }\n\n  cancel(){\n    this.showEdit = false;\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n}\n\n\n\n","module.exports = \"<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-4\\\">\\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item active\\\">\\r\\n                <a href=\\\"\\\" *ngIf=\\\"!showEdit\\\"> Add title Category</a>\\r\\n                <a href=\\\"\\\" *ngIf=\\\"showEdit\\\"> Update title Category</a>\\r\\n             </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n       <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\" *ngIf=\\\"!showEdit\\\"><i class=\\\"fas fa-layer-group\\\"></i> Add title Category</h6>\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\" *ngIf=\\\"showEdit\\\"><i class=\\\"fas fa-layer-group\\\"></i> Update title Category</h6>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-body input-border\\\" *ngIf=\\\"!showEdit\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"text\\\" (ngModel)=\\\"title\\\" (input)=\\\"title=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the title here...\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"text-left\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n                  </div>\\r\\n                  </div> \\r\\n              </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"card-body input-border\\\" *ngIf=\\\"showEdit\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"etitle\\\" (input)=\\\"etitle=$event.target.value\\\"  class=\\\"form-control\\\" name=\\\"t\\\" placeholder=\\\"Enter the title here...\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                  <div class=\\\"text-left\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">Save</button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                  </div>\\r\\n                  </div> \\r\\n              </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <!-- Table Start -->\\r\\n            <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Title Category</th>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Edit</th>\\r\\n                        <th class=\\\"border-none\\\" align=\\\"center\\\">Delete</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let title of titles\\\" class=\\\"odd\\\">\\r\\n                            <td align=\\\"center\\\">{{title.name}}</td>\\r\\n                            <td align=\\\"center\\\" (click)=\\\"enableEdit(title.id,title.name)\\\" class=\\\"cursorPointer\\\">\\r\\n                                <i class=\\\"fas fa-pencil-alt\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"></i>\\r\\n                            </td>\\r\\n                            <td align=\\\"center\\\" (click)=\\\"deleteTitle(title.id)\\\" class=\\\"cursorPointer\\\">\\r\\n                                    <i class=\\\"fas fa-trash\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"></i>\\r\\n                            </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './titleCategory.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class titleCategoryComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private titles;\n  private formdata;\n  private alertMessage;\n  private title;\n  private showEdit;currentTitleId;etitle;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    this.showEdit = false;\n    \n  }\n  ngOnInit() {\n    this.getTitles();\n  }\n  \n  getTitles() {\n    this.http.get(this.globals.baseUrl+'categories')\n    .subscribe( (data) => {\n      this.titles = data\n     });    \n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  save(){\n    if(!this.title){\n      this.toast(\"Please enter title\");\n    }\n    else{\n      this.formdata = {\n        title : this.title\n      }\n      this.http.post(this.globals.baseUrl+'addcategory',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.toast(\"Title Category added Successfully...\");\n            window.location.reload();\n          },\n          error => {this.toast(\"Title Category added failed...\");}\n      ); \n    }     \n  }\n\n  deleteTitle(id){\n    this.formdata = {\n      id : id\n    }\n    this.http.post(this.globals.baseUrl+'deletecategory',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Title Category has been deleted...\");\n          this.router.navigate(['/titles'])\n          setTimeout(function(){\n            window.location.reload();\n          })\n        },\n        error => this.errorMessage = <any>error\n    );\n  }\n\n  enableEdit(id,name){    \n    this.currentTitleId = id;\n    this.etitle = name;\n    this.showEdit = true;\n  }\n\n  update(){    \n    this.formdata = {\n      id : this.currentTitleId,\n      title : this.etitle\n    }\n    this.http.post(this.globals.baseUrl+'updatecategory',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Title Category has been updated...\");\n          this.router.navigate(['/titles'])\n          setTimeout(function(){\n            window.location.reload();\n          })\n        },\n        error => this.errorMessage = <any>error\n    );\n  }\n\n  cancel(){\n    this.showEdit = false;\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n}\n\n\n\n","module.exports = \"<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-4\\\">\\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item active\\\">\\r\\n                <a href=\\\"#\\\"> Users</a>\\r\\n             </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n       <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> Users</h6>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <div class=\\\"card-body\\\">\\r\\n            <!-- card-body Start -->\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <!-- Table Start -->\\r\\n                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">Name</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">Email</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">Mobile</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">Approved</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">Staff / Admin</th>\\r\\n                            <th class=\\\"border-none\\\" align=\\\"center\\\">Delete</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let user of users\\\" class=\\\"odd\\\">\\r\\n                                <td align=\\\"center\\\">{{user.name}}</td>\\r\\n                                <td align=\\\"center\\\">{{user.email}}</td>\\r\\n                                <td align=\\\"center\\\">{{user.mobile}}</td>\\r\\n                                <td align=\\\"center\\\">\\r\\n                                    <label class=\\\"switch\\\">\\r\\n                                          <input type=\\\"checkbox\\\" [checked]=\\\"user.activeStatus=='Yes'\\\" (change)=\\\"changeStatus(user.id,user.changeStatusValue)\\\">\\r\\n                                          <span class=\\\"slider round\\\"></span>\\r\\n                                    </label>\\r\\n                               </td>\\r\\n                                <td align=\\\"center\\\">\\r\\n                                      <label class=\\\"switch\\\">\\r\\n                                          <input type=\\\"checkbox\\\" [checked]=\\\"user.role=='admin'\\\" (change)=\\\"changeRoleId(user.id,user.changerole)\\\">\\r\\n                                          <span class=\\\"slider round\\\"></span>\\r\\n                                      </label>\\r\\n                                </td>\\r\\n                                <td align=\\\"center\\\" (click)=\\\"deleteUser(user.id)\\\" class=\\\"cursorPointer\\\">\\r\\n                                        <i class=\\\"fas fa-trash\\\" data-container=\\\"body\\\" data-toggle=\\\"popover\\\" data-placement=\\\"bottom\\\"></i>\\r\\n                                </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './users.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class usersComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private users;\n  private formdata;\n  private alertMessage;\n  private test;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    \n  }\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n  getUsers(){\n    this.http.get(this.globals.baseUrl+'users')\n    .subscribe( (data) => {\n      this.users = data\n     });  \n  }\n\n  changeStatus(userId,changeStatusValue){\n     this.formdata = {\n      id : userId,\n      changeStatusValue : changeStatusValue\n    }\n    this.http.post(this.globals.baseUrl+'changestatus',this.formdata,this.headers)\n    .subscribe(\n        response => {\n          this.toast(\"Status Changed Successfully...\");\n          window.location.reload();\n        },\n        error => this.errorMessage = <any>error\n    ); \n  }\n\n  changeRoleId(userId,changeStatusValue){\n    this.formdata = {\n     id : userId,\n     changeStatusValue : changeStatusValue\n   }\n   this.http.post(this.globals.baseUrl+'changerole',this.formdata,this.headers)\n   .subscribe(\n       response => {\n         this.toast(\"Role Changed Successfully...\");\n         window.location.reload();\n       },\n       error => this.errorMessage = <any>error\n   ); \n }\n\n\n deleteUser(id){\n  this.formdata = {\n    id : id\n  }\n  this.http.post(this.globals.baseUrl+'deleteUser',this.formdata,this.headers)\n  .subscribe(\n      response => {\n        this.toast(\"User has been deleted...\");\n        this.router.navigate(['/users'])\n        setTimeout(function(){\n          window.location.reload();\n        })\n      },\n      error => this.errorMessage = <any>error\n  );\n}\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n}\n\n\n\n","module.exports = \"<div class=\\\"container-main\\\">\\r\\n    <div class=\\\"breadcrumb\\\">\\r\\n       <div class=\\\"col-md-4\\\">\\r\\n          <ol class=\\\"breadcrumb breadcrumb1\\\">\\r\\n             <li class=\\\"breadcrumb-item active\\\">\\r\\n                <a href=\\\"#\\\"> User Profile</a>\\r\\n             </li>\\r\\n          </ol>\\r\\n       </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n       <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-primary\\\"><i class=\\\"fas fa-layer-group\\\"></i> User Profile</h6>\\r\\n             </div>\\r\\n          </div>\\r\\n       </div>\\r\\n       <div class=\\\"card-body input-border\\\" *ngIf=\\\"currentUser\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row row-mat-top\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"form-label\\\">Name</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        {{currentUser.name}}\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>            \\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label class=\\\"form-label\\\">Email</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            {{currentUser.email}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>        \\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label class=\\\"form-label\\\">Mobile Number</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            {{currentUser.mobile}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">     \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row row-mat-top\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label class=\\\"form-label\\\">Role</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            {{currentUser.role}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n </div>\\r\\n <div id=\\\"snackbar\\\">{{alertMessage}}</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient} from '@angular/common/http';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Globals } from './global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './usersactivity.component.html',\n  styleUrls: [],\n  providers: [ Globals ] \n})\nexport class usersActivityComponent {\n  errorMessage: string;\n  private accessToken;\n  private headers;\n  private users;\n  private formdata;\n  private alertMessage;userId;currentUser;\n  baseUrl = 'http://13.234.116.80:4206/';\n  constructor(private router: Router, private http: HttpClient,private oktaAuth: OktaAuthService, private globals: Globals){\n    this.init();\n    \n  }\n  ngOnInit() {\n    this.checkUser();\n  }\n\n  async init() {\n    this.accessToken = await this.oktaAuth.getAccessToken();\n    this.headers = new Headers({\n        Authorization: 'Bearer ' + this.accessToken\n    });\n  }\n\n  checkUser(){\n    this.userId = localStorage.getItem('userId');\n    if(this.userId){\n      this.formdata = {\n        id : this.userId\n      }\n      this.http.post(this.globals.baseUrl+'userrole',this.formdata,this.headers)\n      .subscribe(\n          response => {\n            this.currentUser = response;\n          },\n          error => {this.toast(\"Invalid credentials...\");}\n      );\n    }\n  }\n\n  toast(message) {\n    this.alertMessage = message;\n      var x = document.getElementById(\"snackbar\");\n      x.className = \"show\";\n      setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n}\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}